{"ast":null,"code":"var _jsxFileName = \"/home/dom/FlyM/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport usersData from './users.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const history = useHistory();\n\n  const handleCreateAccount = e => {\n    e.preventDefault();\n    const newUser = {\n      username,\n      password,\n      email\n    };\n    const existingUser = usersData.users.find(u => u.username === username || u.email === email);\n\n    if (existingUser) {\n      alert('Username or email already exists');\n    } else {\n      usersData.users.push(newUser);\n      alert('Account created successfully');\n      history.push('/login');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleCreateAccount,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"GnBQVBFppZWJVHbL4ruwAug/r2s=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/dom/FlyM/src/components/SignUp.js"],"names":["React","useState","useHistory","usersData","SignUp","username","setUsername","password","setPassword","email","setEmail","history","handleCreateAccount","e","preventDefault","newUser","existingUser","users","find","u","alert","push","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,OAAO,GAAGT,UAAU,EAA1B;;AAEA,QAAMU,mBAAmB,GAAIC,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,OAAO,GAAG;AAAEV,MAAAA,QAAF;AAAYE,MAAAA,QAAZ;AAAsBE,MAAAA;AAAtB,KAAhB;AAEA,UAAMO,YAAY,GAAGb,SAAS,CAACc,KAAV,CAAgBC,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACd,QAAF,KAAeA,QAAf,IAA2Bc,CAAC,CAACV,KAAF,KAAYA,KAAnE,CAArB;;AAEA,QAAIO,YAAJ,EAAkB;AAChBI,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACD,KAFD,MAEO;AACLjB,MAAAA,SAAS,CAACc,KAAV,CAAgBI,IAAhB,CAAqBN,OAArB;AACAK,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACAT,MAAAA,OAAO,CAACU,IAAR,CAAa,QAAb;AACD;AACF,GAdD;;AAgBA,sBACE;AAAM,IAAA,QAAQ,EAAET,mBAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,2CAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEP,QAA1B;AAAoC,QAAA,QAAQ,EAAGQ,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACS,MAAF,CAASC,KAAV;AAAhE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,2CAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAEhB,QAA9B;AAAwC,QAAA,QAAQ,EAAGM,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACS,MAAF,CAASC,KAAV;AAApE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA,wCAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAEd,KAA3B;AAAkC,QAAA,QAAQ,EAAGI,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACS,MAAF,CAASC,KAAV;AAA3D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBF;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3CD;;GAAMnB,M;UAIYF,U;;;KAJZE,M;AA6CN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport usersData from './users.json';\n\nconst SignUp = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const history = useHistory();\n\n  const handleCreateAccount = (e) => {\n    e.preventDefault();\n\n    const newUser = { username, password, email };\n\n    const existingUser = usersData.users.find((u) => u.username === username || u.email === email);\n\n    if (existingUser) {\n      alert('Username or email already exists');\n    } else {\n      usersData.users.push(newUser);\n      alert('Account created successfully');\n      history.push('/login');\n    }\n  };\n\n  return (\n    <form onSubmit={handleCreateAccount}>\n      <h1>Create Account</h1>\n      <label>\n        Username:\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Password:\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Email:\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n      </label>\n      <br />\n  <button type=\"submit\">Create Account</button>\n</form>\n);\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}