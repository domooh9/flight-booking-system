{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar sessionAuth = require(\"./session-shared.js\");\n\nvar jsxRuntime = require(\"react/jsx-runtime\");\n\nvar translationContext = require(\"./translationContext.js\");\n\nrequire(\"react\");\n\nrequire(\"supertokens-web-js/utils/cookieHandler\");\n\nrequire(\"supertokens-web-js/utils/postSuperTokensInitCallbacks\");\n\nrequire(\"supertokens-web-js/utils/windowHandler\");\n\nrequire(\"supertokens-web-js/utils/normalisedURLPath\");\n\nrequire(\"supertokens-web-js/utils/normalisedURLDomain\");\n\nrequire(\"supertokens-web-js/recipe/session/recipe\");\n\nvar SuperTokensWrapper = function (props) {\n  return jsxRuntime.jsx(sessionAuth.SessionAuthWrapper, sessionAuth.__assign({}, props, {\n    requireAuth: false,\n    doRedirection: false\n  }));\n};\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n * API Wrapper exposed to user.\n */\n\n\nvar SuperTokensAPIWrapper =\n/** @class */\nfunction () {\n  function SuperTokensAPIWrapper() {}\n\n  SuperTokensAPIWrapper.init = function (config) {\n    sessionAuth.SuperTokens.init(config);\n  };\n\n  SuperTokensAPIWrapper.canHandleRoute = function () {\n    return sessionAuth.SuperTokens.canHandleRoute();\n  };\n\n  SuperTokensAPIWrapper.getRoutingComponent = function () {\n    return sessionAuth.SuperTokens.getRoutingComponent();\n  };\n\n  SuperTokensAPIWrapper.changeLanguage = function (language) {\n    return sessionAuth.SuperTokens.getInstanceOrThrow().changeLanguage(language);\n  };\n\n  SuperTokensAPIWrapper.loadTranslation = function (store) {\n    return sessionAuth.SuperTokens.getInstanceOrThrow().loadTranslation(store);\n  };\n\n  SuperTokensAPIWrapper.getSuperTokensRoutesForReactRouterDom = function (reactRouterDom) {\n    return sessionAuth.SuperTokens.getSuperTokensRoutesForReactRouterDom(reactRouterDom);\n  };\n\n  var _a;\n\n  _a = SuperTokensAPIWrapper;\n  SuperTokensAPIWrapper.SuperTokensWrapper = SuperTokensWrapper;\n\n  SuperTokensAPIWrapper.redirectToAuth = function (options) {\n    return sessionAuth.__awaiter(void 0, void 0, void 0, function () {\n      var _b;\n\n      return sessionAuth.__generator(_a, function (_c) {\n        return [2\n        /*return*/\n        , sessionAuth.SuperTokens.getInstanceOrThrow().redirectToAuth(sessionAuth.__assign(sessionAuth.__assign({}, options), {\n          redirectBack: (_b = options === null || options === void 0 ? void 0 : options.redirectBack) !== null && _b !== void 0 ? _b : true\n        }))];\n      });\n    });\n  };\n\n  SuperTokensAPIWrapper.useTranslation = translationContext.useTranslation;\n  SuperTokensAPIWrapper.useUserContext = sessionAuth.useUserContext;\n  return SuperTokensAPIWrapper;\n}();\n\nvar canHandleRoute = SuperTokensAPIWrapper.canHandleRoute;\nvar init = SuperTokensAPIWrapper.init;\nvar changeLanguage = SuperTokensAPIWrapper.changeLanguage;\nvar loadTranslation = SuperTokensAPIWrapper.loadTranslation;\nvar getRoutingComponent = SuperTokensAPIWrapper.getRoutingComponent;\nvar getSuperTokensRoutesForReactRouterDom = SuperTokensAPIWrapper.getSuperTokensRoutesForReactRouterDom;\nvar redirectToAuth = SuperTokensAPIWrapper.redirectToAuth;\nexports.useUserContext = sessionAuth.useUserContext;\nexports.useTranslation = translationContext.useTranslation;\nexports.SuperTokensWrapper = SuperTokensWrapper;\nexports.canHandleRoute = canHandleRoute;\nexports.changeLanguage = changeLanguage;\nexports.default = SuperTokensAPIWrapper;\nexports.getRoutingComponent = getRoutingComponent;\nexports.getSuperTokensRoutesForReactRouterDom = getSuperTokensRoutesForReactRouterDom;\nexports.init = init;\nexports.loadTranslation = loadTranslation;\nexports.redirectToAuth = redirectToAuth;","map":{"version":3,"mappings":"","names":[],"sources":[],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar sessionAuth = require(\"./session-shared.js\");\nvar jsxRuntime = require(\"react/jsx-runtime\");\nvar translationContext = require(\"./translationContext.js\");\nrequire(\"react\");\nrequire(\"supertokens-web-js/utils/cookieHandler\");\nrequire(\"supertokens-web-js/utils/postSuperTokensInitCallbacks\");\nrequire(\"supertokens-web-js/utils/windowHandler\");\nrequire(\"supertokens-web-js/utils/normalisedURLPath\");\nrequire(\"supertokens-web-js/utils/normalisedURLDomain\");\nrequire(\"supertokens-web-js/recipe/session/recipe\");\n\nvar SuperTokensWrapper = function (props) {\n    return jsxRuntime.jsx(\n        sessionAuth.SessionAuthWrapper,\n        sessionAuth.__assign({}, props, { requireAuth: false, doRedirection: false })\n    );\n};\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * API Wrapper exposed to user.\n */\nvar SuperTokensAPIWrapper = /** @class */ (function () {\n    function SuperTokensAPIWrapper() {}\n    SuperTokensAPIWrapper.init = function (config) {\n        sessionAuth.SuperTokens.init(config);\n    };\n    SuperTokensAPIWrapper.canHandleRoute = function () {\n        return sessionAuth.SuperTokens.canHandleRoute();\n    };\n    SuperTokensAPIWrapper.getRoutingComponent = function () {\n        return sessionAuth.SuperTokens.getRoutingComponent();\n    };\n    SuperTokensAPIWrapper.changeLanguage = function (language) {\n        return sessionAuth.SuperTokens.getInstanceOrThrow().changeLanguage(language);\n    };\n    SuperTokensAPIWrapper.loadTranslation = function (store) {\n        return sessionAuth.SuperTokens.getInstanceOrThrow().loadTranslation(store);\n    };\n    SuperTokensAPIWrapper.getSuperTokensRoutesForReactRouterDom = function (reactRouterDom) {\n        return sessionAuth.SuperTokens.getSuperTokensRoutesForReactRouterDom(reactRouterDom);\n    };\n    var _a;\n    _a = SuperTokensAPIWrapper;\n    SuperTokensAPIWrapper.SuperTokensWrapper = SuperTokensWrapper;\n    SuperTokensAPIWrapper.redirectToAuth = function (options) {\n        return sessionAuth.__awaiter(void 0, void 0, void 0, function () {\n            var _b;\n            return sessionAuth.__generator(_a, function (_c) {\n                return [\n                    2 /*return*/,\n                    sessionAuth.SuperTokens.getInstanceOrThrow().redirectToAuth(\n                        sessionAuth.__assign(sessionAuth.__assign({}, options), {\n                            redirectBack:\n                                (_b = options === null || options === void 0 ? void 0 : options.redirectBack) !==\n                                    null && _b !== void 0\n                                    ? _b\n                                    : true,\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    SuperTokensAPIWrapper.useTranslation = translationContext.useTranslation;\n    SuperTokensAPIWrapper.useUserContext = sessionAuth.useUserContext;\n    return SuperTokensAPIWrapper;\n})();\nvar canHandleRoute = SuperTokensAPIWrapper.canHandleRoute;\nvar init = SuperTokensAPIWrapper.init;\nvar changeLanguage = SuperTokensAPIWrapper.changeLanguage;\nvar loadTranslation = SuperTokensAPIWrapper.loadTranslation;\nvar getRoutingComponent = SuperTokensAPIWrapper.getRoutingComponent;\nvar getSuperTokensRoutesForReactRouterDom = SuperTokensAPIWrapper.getSuperTokensRoutesForReactRouterDom;\nvar redirectToAuth = SuperTokensAPIWrapper.redirectToAuth;\n\nexports.useUserContext = sessionAuth.useUserContext;\nexports.useTranslation = translationContext.useTranslation;\nexports.SuperTokensWrapper = SuperTokensWrapper;\nexports.canHandleRoute = canHandleRoute;\nexports.changeLanguage = changeLanguage;\nexports.default = SuperTokensAPIWrapper;\nexports.getRoutingComponent = getRoutingComponent;\nexports.getSuperTokensRoutesForReactRouterDom = getSuperTokensRoutesForReactRouterDom;\nexports.init = init;\nexports.loadTranslation = loadTranslation;\nexports.redirectToAuth = redirectToAuth;\n"]},"metadata":{},"sourceType":"script"}