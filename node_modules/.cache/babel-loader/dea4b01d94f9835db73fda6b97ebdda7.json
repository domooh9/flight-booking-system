{"ast":null,"code":"var _jsxFileName = \"/home/dom/Videos/FlyM/src/components/Admindash.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Table, Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Admindash = props => {\n  _s();\n\n  const {\n    flights\n  } = props;\n  const [rescheduledFlight, setRescheduledFlight] = useState(null);\n  const [rescheduledFlightTime, setRescheduledFlightTime] = useState('');\n  const [rescheduledFlightMessage, setRescheduledFlightMessage] = useState('');\n\n  const getUniqueFlightName = (airlineName, index) => {\n    // Replace spaces with hyphens and append the stored random number if not rescheduled\n    if (index !== rescheduledFlight) {\n      return airlineName.replace(/ /g, '-') + '-' + flights[index].randomNum;\n    } else {\n      return airlineName.replace(/ /g, '-');\n    }\n  };\n\n  const handleReschedule = index => {\n    setRescheduledFlight(index);\n  };\n\n  const handleRescheduleTimeChange = event => {\n    setRescheduledFlightTime(event.target.value);\n  };\n\n  const handleRescheduleMessageChange = event => {\n    setRescheduledFlightMessage(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(`Rescheduling flight ${flights[rescheduledFlight].airline} at ${rescheduledFlightTime} with message: ${rescheduledFlightMessage}`); // Update the departure time for the rescheduled flight\n\n    const updatedFlights = [...flights];\n    updatedFlights[rescheduledFlight].departureTime = rescheduledFlightTime; // Send message to FlightTracker component\n\n    setRescheduledFlight(null);\n  }; // Initialize the random number for each flight when the component mounts\n\n\n  useState(() => {\n    const updatedFlights = flights.map(flight => ({ ...flight,\n      randomNum: Math.floor(Math.random() * 10000)\n    }));\n    props.setFlights(updatedFlights);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Admidash\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available flights today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Airline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Departure Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Departure Gate Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reschedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: flights.map((flight, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: index === rescheduledFlight ? 'blue' : 'transparent'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: getUniqueFlightName(flight.airline, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: flight.departureTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: flight.departureGateNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: flight.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [index === rescheduledFlight && /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"datetime-local\",\n                  placeholder: \"Enter new departure time\",\n                  value: rescheduledFlightTime,\n                  onChange: handleRescheduleTimeChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Enter reason for rescheduling\",\n                  value: rescheduledFlightMessage,\n                  onChange: handleRescheduleMessageChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), \" \", index !== rescheduledFlight && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleReschedule(index),\n              children: \"Reschedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Admindash, \"WiiaBHB14Rz82k1gbXSIzifYeD4=\");\n\n_c = Admindash;\nexport default Admindash;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admindash\");","map":{"version":3,"sources":["/home/dom/Videos/FlyM/src/components/Admindash.js"],"names":["React","useState","Table","Button","Form","Admindash","props","flights","rescheduledFlight","setRescheduledFlight","rescheduledFlightTime","setRescheduledFlightTime","rescheduledFlightMessage","setRescheduledFlightMessage","getUniqueFlightName","airlineName","index","replace","randomNum","handleReschedule","handleRescheduleTimeChange","event","target","value","handleRescheduleMessageChange","handleSubmit","preventDefault","console","log","airline","updatedFlights","departureTime","map","flight","Math","floor","random","setFlights","backgroundColor","departureGateNumber","price"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Table, Button, Form } from 'react-bootstrap';\n\nconst Admindash = (props) => {\n  const { flights } = props;\n  const [rescheduledFlight, setRescheduledFlight] = useState(null);\n  const [rescheduledFlightTime, setRescheduledFlightTime] = useState('');\n  const [rescheduledFlightMessage, setRescheduledFlightMessage] = useState('');\n\n  const getUniqueFlightName = (airlineName, index) => {\n    // Replace spaces with hyphens and append the stored random number if not rescheduled\n    if (index !== rescheduledFlight) {\n      return airlineName.replace(/ /g, '-') + '-' + flights[index].randomNum;\n    } else {\n      return airlineName.replace(/ /g, '-');\n    }\n  };\n\n  const handleReschedule = (index) => {\n    setRescheduledFlight(index);\n  };\n\n  const handleRescheduleTimeChange = (event) => {\n    setRescheduledFlightTime(event.target.value);\n  };\n\n  const handleRescheduleMessageChange = (event) => {\n    setRescheduledFlightMessage(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(`Rescheduling flight ${flights[rescheduledFlight].airline} at ${rescheduledFlightTime} with message: ${rescheduledFlightMessage}`);\n    // Update the departure time for the rescheduled flight\n    const updatedFlights = [...flights];\n    updatedFlights[rescheduledFlight].departureTime = rescheduledFlightTime;\n    // Send message to FlightTracker component\n    setRescheduledFlight(null);\n  };\n\n  // Initialize the random number for each flight when the component mounts\n  useState(() => {\n    const updatedFlights = flights.map((flight) => ({\n      ...flight,\n      randomNum: Math.floor(Math.random() * 10000)\n    }));\n    props.setFlights(updatedFlights);\n  }, []);\n\n  return (\n    <div className=\"Admidash\">\n      <h2>Available flights today</h2>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Airline</th>\n            <th>Departure Time</th>\n            <th>Departure Gate Number</th>\n            <th>Price</th>\n            <th>Reschedule</th>\n          </tr>\n        </thead>\n        <tbody>\n          {flights.map((flight, index) => (\n            <tr key={index} style={{ backgroundColor: index === rescheduledFlight ? 'blue' : 'transparent' }}>\n              <td>{getUniqueFlightName(flight.airline, index)}</td>\n              <td>{flight.departureTime}</td>\n              <td>{flight.departureGateNumber}</td>\n              <td>{flight.price}</td>\n              <td>\n                {index === rescheduledFlight && (\n                  <Form onSubmit={handleSubmit}>\n                    <Form.Group>\n                      <Form.Control type=\"datetime-local\" placeholder=\"Enter new departure time\" value={rescheduledFlightTime} onChange={handleRescheduleTimeChange} />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Control type=\"text\" placeholder=\"Enter reason for rescheduling\" value={rescheduledFlightMessage} onChange={handleRescheduleMessageChange} />\n                    </Form.Group>\n                    <Button type=\"submit\">Submit</Button>\n                  </Form>\n                )} {index !== rescheduledFlight && (\n                  <Button onClick={() => handleReschedule(index)}>Reschedule</Button>\n                  )}\n                  </td>\n                  </tr>\n                  ))}\n                  </tbody>\n                  </Table>\n                  </div>\n                  );\n                  };\n                  \n                  export default Admindash;"]},"metadata":{},"sourceType":"module"}