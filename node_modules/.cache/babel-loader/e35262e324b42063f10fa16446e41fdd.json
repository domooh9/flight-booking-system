{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"../action-types/action-types\";\nexport const searchFlights = searchParams => async dispatch => {\n  const {\n    to,\n    from,\n    date\n  } = searchParams;\n  let response;\n\n  try {\n    response = await axios.post(\"https://backendflym.herokuapp.com/flights/getFlights\", {\n      to: to,\n      from: from,\n      date: date\n    });\n  } catch (err) {\n    console.error(err);\n  }\n\n  dispatch({\n    type: actionTypes.SEARCH_FLIGHTS,\n    payload: response.data.responseData\n  });\n};\nexport const filterFlights = _ref => {\n  let {\n    filterParams,\n    flightData\n  } = _ref;\n  return async dispatch => {\n    let response;\n\n    switch (filterParams) {\n      case \"Non Stop\":\n        {\n          response = flightData.filter(x => x.type === filterParams);\n          dispatch({\n            type: actionTypes.FILTER_FLIGHTS,\n            payload: response\n          });\n          break;\n        }\n\n      case \"1 Stop\":\n        {\n          response = flightData.filter(x => x.type === filterParams);\n          dispatch({\n            type: actionTypes.FILTER_FLIGHTS,\n            payload: response\n          });\n          break;\n        }\n\n      case 'Air Asia':\n      case 'Indigo':\n      case 'Spicejet':\n      case 'Go First':\n      case 'Vistara':\n        {\n          response = flightData.filter(x => x.airline === filterParams);\n          dispatch({\n            type: actionTypes.FILTER_FLIGHTS,\n            payload: response\n          });\n        }\n\n      case 'Price':\n        {\n          response = flightData.original.filter(x => x.price >= Math.round(flightData.data * 100));\n          dispatch({\n            type: actionTypes.FILTER_FLIGHTS,\n            payload: response\n          });\n        }\n\n      case 'Duration':\n        {\n          response = flightData.original.filter(x => parseInt(x.duration.substring(0, 2)) <= flightData.data);\n          dispatch({\n            type: actionTypes.FILTER_FLIGHTS,\n            payload: response\n          });\n        }\n\n      default:\n        {\n          return response;\n        }\n    }\n  };\n};\nexport const clearFlights = flightData => async dispatch => {\n  dispatch({\n    type: actionTypes.CLEAR_FILTER_FLIGHTS,\n    payload: flightData\n  });\n};","map":{"version":3,"sources":["/home/dom/FlyM/src/store/actions/searchFlightActions.js"],"names":["axios","actionTypes","searchFlights","searchParams","dispatch","to","from","date","response","post","err","console","error","type","SEARCH_FLIGHTS","payload","data","responseData","filterFlights","filterParams","flightData","filter","x","FILTER_FLIGHTS","airline","original","price","Math","round","parseInt","duration","substring","clearFlights","CLEAR_FILTER_FLIGHTS"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"../action-types/action-types\";\n\nexport const searchFlights = (searchParams) => async (dispatch) => {\n  const { to, from, date } = searchParams;\n  let response;\n  try {\n    response = await axios.post(\n      \"https://backendflym.herokuapp.com/flights/getFlights\",\n      {\n        to: to,\n        from: from,\n        date: date,\n      }\n    );\n  } catch (err) {\n    console.error(err);\n  }\n\n  dispatch({\n    type: actionTypes.SEARCH_FLIGHTS,\n    payload: response.data.responseData,\n  });\n};\n\nexport const filterFlights =\n  ({ filterParams, flightData }) =>\n  async (dispatch) => {\n    let response;\n    switch (filterParams) {\n    \n      case \"Non Stop\": {\n        response = flightData.filter((x) => x.type === filterParams);\n        dispatch({ type: actionTypes.FILTER_FLIGHTS, payload: response });\n        break;\n      }\n      case \"1 Stop\": {\n        response = flightData.filter((x) => x.type === filterParams);\n        dispatch({ type: actionTypes.FILTER_FLIGHTS, payload: response });\n        break;\n      }\n\n      case 'Air Asia':\n      case 'Indigo':\n      case 'Spicejet':\n      case 'Go First':\n      case 'Vistara': {\n        response = flightData.filter((x) => x.airline === filterParams);\n        dispatch({type: actionTypes.FILTER_FLIGHTS, payload: response});\n      }\n\n      case 'Price': {\n         response = flightData.original.filter((x)=> x.price >= Math.round( flightData.data*100)) ;\n         dispatch({type:actionTypes.FILTER_FLIGHTS, payload: response});\n      }\n\n      case 'Duration': {\n        \n        response = flightData.original.filter ((x) => parseInt(x.duration.substring(0,2)) <= flightData.data   );\n        dispatch({type:actionTypes.FILTER_FLIGHTS, payload: response});\n      }\n      default: {\n        return response;\n      }\n    }\n  };\n\nexport const clearFlights = (flightData) => async (dispatch) => {\n  dispatch({ type: actionTypes.CLEAR_FILTER_FLIGHTS, payload: flightData });\n};\n"]},"metadata":{},"sourceType":"module"}