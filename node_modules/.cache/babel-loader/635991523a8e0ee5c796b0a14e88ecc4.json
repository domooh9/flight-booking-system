{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PrimitiveClaim = void 0;\n\nvar PrimitiveClaim =\n/** @class */\nfunction () {\n  function PrimitiveClaim(config) {\n    var _this = this;\n\n    this.validators = {\n      hasValue: function (val, maxAgeInSeconds, id) {\n        if (maxAgeInSeconds === void 0) {\n          maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n        }\n\n        return {\n          id: id !== undefined ? id : _this.id,\n          refresh: function (ctx) {\n            return _this.refresh(ctx);\n          },\n          shouldRefresh: function (payload, ctx) {\n            return _this.getValueFromPayload(payload, ctx) === undefined || // We know payload[this.id] is defined since the value is not undefined in this branch\n            maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000;\n          },\n          validate: function (payload, ctx) {\n            var claimVal = _this.getValueFromPayload(payload, ctx);\n\n            if (claimVal === undefined) {\n              return {\n                isValid: false,\n                reason: {\n                  message: \"value does not exist\",\n                  expectedValue: val,\n                  actualValue: claimVal\n                }\n              };\n            }\n\n            var ageInSeconds = (Date.now() - _this.getLastFetchedTime(payload, ctx)) / 1000;\n\n            if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n              return {\n                isValid: false,\n                reason: {\n                  message: \"expired\",\n                  ageInSeconds: ageInSeconds,\n                  maxAgeInSeconds: maxAgeInSeconds\n                }\n              };\n            }\n\n            if (claimVal !== val) {\n              return {\n                isValid: false,\n                reason: {\n                  message: \"wrong value\",\n                  expectedValue: val,\n                  actualValue: claimVal\n                }\n              };\n            }\n\n            return {\n              isValid: true\n            };\n          }\n        };\n      }\n    };\n    this.id = config.id;\n    this.refresh = config.refresh;\n    this.defaultMaxAgeInSeconds = config.defaultMaxAgeInSeconds;\n  }\n\n  PrimitiveClaim.prototype.getValueFromPayload = function (payload, _userContext) {\n    return payload[this.id] !== undefined ? payload[this.id].v : undefined;\n  };\n\n  PrimitiveClaim.prototype.getLastFetchedTime = function (payload, _userContext) {\n    return payload[this.id] !== undefined ? payload[this.id].t : undefined;\n  };\n\n  return PrimitiveClaim;\n}();\n\nexports.PrimitiveClaim = PrimitiveClaim;","map":{"version":3,"sources":["/home/dom/FlyM/node_modules/supertokens-website/lib/build/claims/primitiveClaim.js"],"names":["Object","defineProperty","exports","value","PrimitiveClaim","config","_this","validators","hasValue","val","maxAgeInSeconds","id","defaultMaxAgeInSeconds","undefined","refresh","ctx","shouldRefresh","payload","getValueFromPayload","t","Date","now","validate","claimVal","isValid","reason","message","expectedValue","actualValue","ageInSeconds","getLastFetchedTime","prototype","_userContext","v"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PrimitiveClaim = void 0;\nvar PrimitiveClaim = /** @class */ (function () {\n    function PrimitiveClaim(config) {\n        var _this = this;\n        this.validators = {\n            hasValue: function (val, maxAgeInSeconds, id) {\n                if (maxAgeInSeconds === void 0) {\n                    maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n                }\n                return {\n                    id: id !== undefined ? id : _this.id,\n                    refresh: function (ctx) {\n                        return _this.refresh(ctx);\n                    },\n                    shouldRefresh: function (payload, ctx) {\n                        return (\n                            _this.getValueFromPayload(payload, ctx) === undefined ||\n                            // We know payload[this.id] is defined since the value is not undefined in this branch\n                            (maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000)\n                        );\n                    },\n                    validate: function (payload, ctx) {\n                        var claimVal = _this.getValueFromPayload(payload, ctx);\n                        if (claimVal === undefined) {\n                            return {\n                                isValid: false,\n                                reason: { message: \"value does not exist\", expectedValue: val, actualValue: claimVal }\n                            };\n                        }\n                        var ageInSeconds = (Date.now() - _this.getLastFetchedTime(payload, ctx)) / 1000;\n                        if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                            return {\n                                isValid: false,\n                                reason: {\n                                    message: \"expired\",\n                                    ageInSeconds: ageInSeconds,\n                                    maxAgeInSeconds: maxAgeInSeconds\n                                }\n                            };\n                        }\n                        if (claimVal !== val) {\n                            return {\n                                isValid: false,\n                                reason: { message: \"wrong value\", expectedValue: val, actualValue: claimVal }\n                            };\n                        }\n                        return { isValid: true };\n                    }\n                };\n            }\n        };\n        this.id = config.id;\n        this.refresh = config.refresh;\n        this.defaultMaxAgeInSeconds = config.defaultMaxAgeInSeconds;\n    }\n    PrimitiveClaim.prototype.getValueFromPayload = function (payload, _userContext) {\n        return payload[this.id] !== undefined ? payload[this.id].v : undefined;\n    };\n    PrimitiveClaim.prototype.getLastFetchedTime = function (payload, _userContext) {\n        return payload[this.id] !== undefined ? payload[this.id].t : undefined;\n    };\n    return PrimitiveClaim;\n})();\nexports.PrimitiveClaim = PrimitiveClaim;\n"]},"metadata":{},"sourceType":"script"}