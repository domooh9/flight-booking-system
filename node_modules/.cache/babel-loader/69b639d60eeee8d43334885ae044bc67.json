{"ast":null,"code":"var _jsxFileName = \"/home/dom/Videos/FlyM/src/pages/BrowsePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BrowserPage = () => {\n  _s();\n\n  const [flights, setFlights] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://british-airways-flight-info.p.rapidapi.com/flight/info', {\n          headers: {\n            'x-rapidapi-key': 'deb48d2e96msh1042a56aa3afa71p1c4e5ajsnb5a15b5cd394',\n            'x-rapidapi-host': 'british-airways-flight-info.p.rapidapi.com'\n          },\n          params: {\n            flightno: 'BA',\n            day: '2022-03-10'\n          }\n        });\n        setFlights(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleBookFlight = flight => {// Implement book flight logic here\n  };\n\n  const handleCancelFlight = flight => {// Implement cancel flight logic here\n  };\n\n  const handleRescheduleFlight = (flight, newDate) => {// Implement reschedule flight logic here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Browser Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: flights.map(flight => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [flight.flightNumber, \" - \", flight.departureAirport, \" to \", flight.arrivalAirport, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBookFlight(flight),\n          children: \"Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCancelFlight(flight),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRescheduleFlight(flight, '2022-03-12'),\n          children: \"Reschedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, flight.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BrowserPage, \"YkaBEB7rvMCgao95TwXfNB7bv6I=\");\n\n_c = BrowserPage;\nexport default BrowserPage;\n{\n  /* <Table striped bordered hover>\n     <thead>\n       <tr>\n         <th>Airline Name</th>\n         <th>Flight Number</th>\n         <th>Departure</th>\n         <th>Arrival</th>\n         <th>Price</th>\n         <th>Action</th>\n       </tr>\n     </thead>\n     <tbody>\n       {flights.map((flight, index) => (\n         <tr key={index}>\n           <td>{flight.name}</td>\n           <td>{flight.flight_number}</td>\n           <td>{flight.departure}</td>\n           <td>{flight.arrival}</td>\n           <td>{flight.price}</td>\n           <td>\n             <Button variant=\"primary\" onClick={() => handleBooking(flight)}>Book</Button>{' '}\n             <Button variant=\"danger\" onClick={() => handleCancellation(flight)}>Cancel</Button>{' '}\n           </td>\n         </tr>\n       ))}\n     </tbody>\n   </Table> */\n} // import React from 'react';\n// import Flight from \"../components/Flight\";\n// import \"./BrowsePage.css\"\n// import { Link } from \"react-router-dom\";\n// const BrowsePage = () => {\n//   const flights = [\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//   ];\n//   return (\n//     <>\n//     <h2 className=\"half-underline\" style={{color: '#00171F'}}>Available flights for your route </h2>\n//     <Link  to=\"/\" className=\"fiig\">Go back</Link>\n//     <Link  to=\"/page\" className=\"iig\">Track Your Flights</Link> \n//      <div className=\"flight-list\">\n//       {flights.map((flight, index) => (\n//         <Flight key={index} {...flight} />\n//       ))}\n//     </div>\n//     </>\n//   );\n// };\n// export default BrowsePage;\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { useEffect, useState } from \"react\";\n// // import React from \"react\";\n// // import FlightCard from \"../components/FlightCard\";\n// // import Header from \"../components/Header\";\n// // import FlightTable from \"../components/FlightTable\";\n// // import Sidebar from \"../Layout/Sidebar\";\n// // import Grid from \"@mui/material/Grid\";\n// // import { styled } from \"@mui/material/styles\";\n// // import Paper from \"@mui/material/Paper\";\n// // import Box from \"@mui/material/Box\";\n// // import \"./BrowsePage.scss\";\n// // import {\n// //   clearFlights,\n// //   filterFlights,\n// // } from \"../store/actions/searchFlightActions\";\n// // import NotFound from \"../Layout/NotFound\";\n// // const BrowsePage = () => {\n// //   const dispatch = useDispatch();\n// //   const [isStopsChecked, setIsStopsChecked] = useState([false, false]);\n// //   const [isAirlineChecked, setIsAirlineChecked] = useState([\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //   ]);\n// //   /**\n// //    * Theme for the grid\n// //    * @params theme\n// //    * @returns void\n// //    */\n// //   const Item = styled(Paper)(({ theme }) => ({\n// //     backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n// //     ...theme.typography.body2,\n// //     padding: theme.spacing(1),\n// //     textAlign: \"center\",\n// //     color: theme.palette.text.secondary,\n// //   }));\n// //   const sendStopsSelectionData = ([index1, index2]) => {\n// //     setIsStopsChecked([index1, index2]);\n// //   };\n// //   const sendAirlineSelectionData = ([\n// //     index1,\n// //     index2,\n// //     index3,\n// //     index4,\n// //     index5,\n// //   ]) => {\n// //     setIsAirlineChecked([index1, index2, index3, index4, index5]);\n// //   };\n// //   const flightData = useSelector((state) => state.flights.flights);\n// //   const filteredFlightData = useSelector(\n// //     (state) => state.flights.filteredFlights\n// //   );\n// //   const lastAction = useSelector((state) => state.flights.lastAction);\n// //   const isFlightDataLoading = useSelector(\n// //     (state) => state.flights.isFlightDataLoading\n// //   );\n// //   useEffect(() => {\n// //     if (isStopsChecked[0]) {\n// //       dispatch(filterFlights({ filterParams: \"Non Stop\", flightData }));\n// //     } else if (isStopsChecked[1]) {\n// //       dispatch(filterFlights({ filterParams: \"1 Stop\", flightData }));\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [isStopsChecked[0], isStopsChecked[1]]);\n// //   useEffect(() => {\n// //     let modifiedFlightData = filteredFlightData\n// //       ? filteredFlightData\n// //       : flightData;\n// //     if (isAirlineChecked[0]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Air Asia\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[1]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Go First\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[2]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Indigo\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[3]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Spicejet\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[4]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Vistara\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [\n// //     isAirlineChecked[0],\n// //     isAirlineChecked[1],\n// //     isAirlineChecked[2],\n// //     isAirlineChecked[3],\n// //     isAirlineChecked[4],\n// //   ]);\n// //   return (\n// //     <React.Fragment>\n// //       <Header />\n// //       <Box sx={{ flexGrow: 1 }} style={{ padding: \"5px\" }}>\n// //         <Grid container spacing={2}>\n// //           <Grid item xs={4} md={3} sm={4} className=\"filters\">\n// //             <Sidebar\n// //               sendStopsSelectionData={sendStopsSelectionData}\n// //               sendAirlineSelectionData={sendAirlineSelectionData}\n// //             />\n// //           </Grid>\n// //           <Grid item xs={8} md={9} sm={8} className=\"table-grid\">\n// //             <Item>\n// //               {isFlightDataLoading && <p>Loading</p>}\n// //               {flightData.length > 0 && (\n// //                 <React.Fragment>\n// //                   {! (!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\") &&  filteredFlightData.length !== 0 &&\n// //                   <FlightTable />}\n// //                   {!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\"\n// //                     ? flightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })\n// //                     :( filteredFlightData.length === 0)? \n// //                      <NotFound message=\"Sorry for the inconvenience. We could not find any flights!\"/>\n// //                     : filteredFlightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })}\n// //                 </React.Fragment>\n// //               )}\n// //             </Item>\n// //           </Grid>\n// //         </Grid>\n// //       </Box>\n// //     </React.Fragment>\n// //   );\n// // };\n// // export default BrowsePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowserPage\");","map":{"version":3,"sources":["/home/dom/Videos/FlyM/src/pages/BrowsePage.js"],"names":["React","useState","useEffect","axios","BrowserPage","flights","setFlights","fetchData","response","get","headers","params","flightno","day","data","error","console","handleBookFlight","flight","handleCancelFlight","handleRescheduleFlight","newDate","map","flightNumber","departureAirport","arrivalAirport","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CACrB,gEADqB,EAErB;AACEC,UAAAA,OAAO,EAAE;AACP,8BAAkB,oDADX;AAEP,+BAAmB;AAFZ,WADX;AAKEC,UAAAA,MAAM,EAAE;AACNC,YAAAA,QAAQ,EAAE,IADJ;AAENC,YAAAA,GAAG,EAAE;AAFC;AALV,SAFqB,CAAvB;AAaAP,QAAAA,UAAU,CAACE,QAAQ,CAACM,IAAV,CAAV;AACD,OAfD,CAeE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,KAnBD;;AAoBAR,IAAAA,SAAS;AACV,GAtBQ,EAsBN,EAtBM,CAAT;;AAwBA,QAAMU,gBAAgB,GAAIC,MAAD,IAAY,CACnC;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAID,MAAD,IAAY,CACrC;AACD,GAFD;;AAIA,QAAME,sBAAsB,GAAG,CAACF,MAAD,EAASG,OAAT,KAAqB,CAClD;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGhB,OAAO,CAACiB,GAAR,CAAaJ,MAAD,iBACX;AAAA,mBACGA,MAAM,CAACK,YADV,SAC2BL,MAAM,CAACM,gBADlC,UACwDN,MAAM,CAACO,cAD/D,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMR,gBAAgB,CAACC,MAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAE,MAAMC,kBAAkB,CAACD,MAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,OAAO,EAAE,MAAME,sBAAsB,CAACF,MAAD,EAAS,YAAT,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAASA,MAAM,CAACQ,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAxDD;;GAAMtB,W;;KAAAA,W;AA0DN,eAAeA,WAAf;AASI;AAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAkB,C,CAGlsourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst BrowserPage = () => {\n  const [flights, setFlights] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          'https://british-airways-flight-info.p.rapidapi.com/flight/info',\n          {\n            headers: {\n              'x-rapidapi-key': 'deb48d2e96msh1042a56aa3afa71p1c4e5ajsnb5a15b5cd394',\n              'x-rapidapi-host': 'british-airways-flight-info.p.rapidapi.com',\n            },\n            params: {\n              flightno: 'BA',\n              day: '2022-03-10',\n            },\n          }\n        );\n        setFlights(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const handleBookFlight = (flight) => {\n    // Implement book flight logic here\n  };\n\n  const handleCancelFlight = (flight) => {\n    // Implement cancel flight logic here\n  };\n\n  const handleRescheduleFlight = (flight, newDate) => {\n    // Implement reschedule flight logic here\n  };\n\n  return (\n    <div>\n      <h1>Browser Page</h1>\n      <ul>\n        {flights.map((flight) => (\n          <li key={flight.id}>\n            {flight.flightNumber} - {flight.departureAirport} to {flight.arrivalAirport}\n            <button onClick={() => handleBookFlight(flight)}>Book</button>\n            <button onClick={() => handleCancelFlight(flight)}>Cancel</button>\n            <button onClick={() => handleRescheduleFlight(flight, '2022-03-12')}>\n              Reschedule\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BrowserPage\n\n\n\n\n\n \n \n    \n    {/* <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Airline Name</th>\n            <th>Flight Number</th>\n            <th>Departure</th>\n            <th>Arrival</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {flights.map((flight, index) => (\n            <tr key={index}>\n              <td>{flight.name}</td>\n              <td>{flight.flight_number}</td>\n              <td>{flight.departure}</td>\n              <td>{flight.arrival}</td>\n              <td>{flight.price}</td>\n              <td>\n                <Button variant=\"primary\" onClick={() => handleBooking(flight)}>Book</Button>{' '}\n                <Button variant=\"danger\" onClick={() => handleCancellation(flight)}>Cancel</Button>{' '}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table> */}\n    \n\n// import React from 'react';\n// import Flight from \"../components/Flight\";\n// import \"./BrowsePage.css\"\n// import { Link } from \"react-router-dom\";\n\n// const BrowsePage = () => {\n//   const flights = [\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//   ];\n\n//   return (\n//     <>\n  \n//     <h2 className=\"half-underline\" style={{color: '#00171F'}}>Available flights for your route </h2>\n//     <Link  to=\"/\" className=\"fiig\">Go back</Link>\n//     <Link  to=\"/page\" className=\"iig\">Track Your Flights</Link> \n//      <div className=\"flight-list\">\n//       {flights.map((flight, index) => (\n//         <Flight key={index} {...flight} />\n//       ))}\n//     </div>\n    \n//     </>\n   \n//   );\n// };\n\n\n\n// export default BrowsePage;\n\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { useEffect, useState } from \"react\";\n// // import React from \"react\";\n// // import FlightCard from \"../components/FlightCard\";\n// // import Header from \"../components/Header\";\n// // import FlightTable from \"../components/FlightTable\";\n// // import Sidebar from \"../Layout/Sidebar\";\n\n// // import Grid from \"@mui/material/Grid\";\n// // import { styled } from \"@mui/material/styles\";\n// // import Paper from \"@mui/material/Paper\";\n// // import Box from \"@mui/material/Box\";\n\n// // import \"./BrowsePage.scss\";\n// // import {\n// //   clearFlights,\n// //   filterFlights,\n// // } from \"../store/actions/searchFlightActions\";\n// // import NotFound from \"../Layout/NotFound\";\n\n// // const BrowsePage = () => {\n// //   const dispatch = useDispatch();\n\n// //   const [isStopsChecked, setIsStopsChecked] = useState([false, false]);\n// //   const [isAirlineChecked, setIsAirlineChecked] = useState([\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //   ]);\n\n// //   /**\n// //    * Theme for the grid\n// //    * @params theme\n// //    * @returns void\n// //    */\n// //   const Item = styled(Paper)(({ theme }) => ({\n// //     backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n// //     ...theme.typography.body2,\n// //     padding: theme.spacing(1),\n// //     textAlign: \"center\",\n// //     color: theme.palette.text.secondary,\n// //   }));\n\n// //   const sendStopsSelectionData = ([index1, index2]) => {\n// //     setIsStopsChecked([index1, index2]);\n// //   };\n\n// //   const sendAirlineSelectionData = ([\n// //     index1,\n// //     index2,\n// //     index3,\n// //     index4,\n// //     index5,\n// //   ]) => {\n// //     setIsAirlineChecked([index1, index2, index3, index4, index5]);\n// //   };\n\n// //   const flightData = useSelector((state) => state.flights.flights);\n// //   const filteredFlightData = useSelector(\n// //     (state) => state.flights.filteredFlights\n// //   );\n// //   const lastAction = useSelector((state) => state.flights.lastAction);\n// //   const isFlightDataLoading = useSelector(\n// //     (state) => state.flights.isFlightDataLoading\n// //   );\n\n// //   useEffect(() => {\n// //     if (isStopsChecked[0]) {\n// //       dispatch(filterFlights({ filterParams: \"Non Stop\", flightData }));\n// //     } else if (isStopsChecked[1]) {\n// //       dispatch(filterFlights({ filterParams: \"1 Stop\", flightData }));\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [isStopsChecked[0], isStopsChecked[1]]);\n\n// //   useEffect(() => {\n// //     let modifiedFlightData = filteredFlightData\n// //       ? filteredFlightData\n// //       : flightData;\n// //     if (isAirlineChecked[0]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Air Asia\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[1]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Go First\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[2]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Indigo\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[3]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Spicejet\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[4]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Vistara\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [\n// //     isAirlineChecked[0],\n// //     isAirlineChecked[1],\n// //     isAirlineChecked[2],\n// //     isAirlineChecked[3],\n// //     isAirlineChecked[4],\n// //   ]);\n\n// //   return (\n// //     <React.Fragment>\n// //       <Header />\n// //       <Box sx={{ flexGrow: 1 }} style={{ padding: \"5px\" }}>\n// //         <Grid container spacing={2}>\n// //           <Grid item xs={4} md={3} sm={4} className=\"filters\">\n// //             <Sidebar\n// //               sendStopsSelectionData={sendStopsSelectionData}\n// //               sendAirlineSelectionData={sendAirlineSelectionData}\n// //             />\n// //           </Grid>\n// //           <Grid item xs={8} md={9} sm={8} className=\"table-grid\">\n// //             <Item>\n// //               {isFlightDataLoading && <p>Loading</p>}\n// //               {flightData.length > 0 && (\n// //                 <React.Fragment>\n// //                   {! (!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\") &&  filteredFlightData.length !== 0 &&\n// //                   <FlightTable />}\n// //                   {!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\"\n// //                     ? flightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })\n// //                     :( filteredFlightData.length === 0)? \n// //                      <NotFound message=\"Sorry for the inconvenience. We could not find any flights!\"/>\n// //                     : filteredFlightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })}\n// //                 </React.Fragment>\n// //               )}\n// //             </Item>\n// //           </Grid>\n// //         </Grid>\n// //       </Box>\n// //     </React.Fragment>\n// //   );\n// // };\n// // export default BrowsePage;\n\n\n"]},"metadata":{},"sourceType":"module"}