{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n/**\n * A namespaced client for the\n * `/v3/travel/trip-parser` endpoints\n *\n * Access via the {@link Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.tripParser;\n * ```\n *\n * @param {Client} client\n */\n\n\nvar TripParser = /*#__PURE__*/function () {\n  function TripParser(client) {\n    _classCallCheck(this, TripParser);\n\n    this.client = client;\n  }\n  /**\n     * parse information from flight, hotel, rail, and rental car confirmation emails\n     *\n     * @param {Object} params\n     * @return {Promise.<Response,ResponseError>} a Promise\n     *\n     * \"How can I show travelers their full itinerary in one place?\"\n     *\n     * ```js\n     * amadeus.tripParser.post(body);\n     * ```\n     */\n\n\n  _createClass(TripParser, [{\n    key: \"post\",\n    value: function post() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.client.post('/v3/travel/trip-parser', params);\n    }\n    /**\n    * Helper method to convert file contents in UTF-8 encoded string\n    * into Base64 encoded string\n    */\n\n  }, {\n    key: \"fromFile\",\n    value: function fromFile(fileContentsInUTF8Format) {\n      return new Buffer.from(fileContentsInUTF8Format).toString('base64');\n    }\n  }]);\n\n  return TripParser;\n}();\n\nvar _default = TripParser;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAZA,IAaMA,UAAU;AACd,sBAAYC,MAAZ,EAAoB;AAAAC;;AAClB,SAAKD,MAAL,GAAcA,MAAd;AACF;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAXEE;AAAAC;AAAAC,WAYA,gBAAkB;AAAA,UAAbC,MAAM,uEAAG,EAAI;AAChB,aAAO,KAAKL,MAAL,CAAYM,IAAZ,CAAiB,wBAAjB,EAA2CD,MAA3C,CAAP;AACF;AACA;AACF;AACA;AACA;;AAlBE,KAeA;AAAAF;AAAAC,WAIA,kBAASG,wBAAT,EAAmC;AACjC,aAAQ,IAAIC,MAAM,CAACC,IAAX,CAAgBF,wBAAhB,EAA2CG,QAA3C,CAAoD,QAApD,CAAR;AACF;AANA,GAfA;;AAqBC;AAAA,CA1Ba,EAbhB;;AAuCG,eAGYX,UAHZ;AAGsBY;AAAAC","names":["TripParser","client","_classCallCheck","_createClass","key","value","params","post","fileContentsInUTF8Format","Buffer","from","toString","exports","module"],"sources":["/home/dom/Videos/FlyM/node_modules/amadeus/src/amadeus/namespaces/travel/trip_parser.js"],"sourcesContent":["/**\n * A namespaced client for the\n * `/v3/travel/trip-parser` endpoints\n *\n * Access via the {@link Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.tripParser;\n * ```\n *\n * @param {Client} client\n */\nclass TripParser {\n  constructor(client) {\n    this.client = client;\n  }\n\n  /**\n     * parse information from flight, hotel, rail, and rental car confirmation emails\n     *\n     * @param {Object} params\n     * @return {Promise.<Response,ResponseError>} a Promise\n     *\n     * \"How can I show travelers their full itinerary in one place?\"\n     *\n     * ```js\n     * amadeus.tripParser.post(body);\n     * ```\n     */\n  post(params = {}) {\n    return this.client.post('/v3/travel/trip-parser', params);\n  }\n  /**\n  * Helper method to convert file contents in UTF-8 encoded string\n  * into Base64 encoded string\n  */\n  fromFile(fileContentsInUTF8Format) {\n    return (new Buffer.from(fileContentsInUTF8Format)).toString('base64');\n  }\n}\n\nexport default TripParser;\n"]},"metadata":{},"sourceType":"script"}