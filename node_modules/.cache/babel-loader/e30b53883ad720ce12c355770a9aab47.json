{"ast":null,"code":"var _jsxFileName = \"/home/dom/Videos/FlyM/src/pages/BrowsePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BrowsePage = () => {\n  _s();\n\n  const [flightNumber, setFlightNumber] = useState(\"\");\n  const [departureDate, setDepartureDate] = useState(\"\");\n  const [flightInfo, setFlightInfo] = useState({});\n  const [bookingStatus, setBookingStatus] = useState(\"\");\n  const API_KEY = \"deb48d2e96msh1042a56aa3afa71p1c4e5ajsnb5a15b5cd394\";\n  const API_URL = `https://community-british-airways-flight-info.p.rapidapi.com/flights;flightNumber=${flightNumber};scheduledDepartureDate=${departureDate}.json`;\n  useEffect(() => {\n    const fetchFlightInfo = async () => {\n      const response = await fetch(API_URL, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": API_KEY,\n          \"x-rapidapi-host\": \"community-british-airways-flight-info.p.rapidapi.com\"\n        }\n      });\n      const data = await response.json();\n      setFlightInfo(data);\n    };\n\n    if (flightNumber !== \"\" && departureDate !== \"\") {\n      fetchFlightInfo();\n    }\n  }, [flightNumber, departureDate]);\n\n  const handleBookFlight = () => {\n    setBookingStatus(\"Booked\");\n  };\n\n  const handleRescheduleFlight = () => {\n    setBookingStatus(\"Rescheduled\");\n  };\n\n  const handleCancelFlight = () => {\n    if (bookingStatus === \"Booked\") {\n      setBookingStatus(\"Cancelled\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Flight Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"flightNumber\",\n        children: \"Flight Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"flightNumber\",\n        value: flightNumber,\n        onChange: e => setFlightNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"departureDate\",\n        children: \"Departure Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"departureDate\",\n        value: departureDate,\n        onChange: e => setDepartureDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Flight Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), flightInfo.flightNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Flight Number: \", flightInfo.flightNumber, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), \"Departure Airport: \", flightInfo.departureAirport, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), \"Arrival Airport: \", flightInfo.arrivalAirport, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), \"Scheduled Departure Time: \", flightInfo.scheduledDepartureTime, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), \"Scheduled Arrival Time: \", flightInfo.scheduledArrivalTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBookFlight,\n          children: \"Book Flight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRescheduleFlight,\n          children: \"Reschedule Flight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), bookingStatus === \"Booked\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelFlight,\n          children: \"Cancel Flight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Booking Status: \", bookingStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BrowsePage, \"cxTTmP/RbkyCYFnqiyl1WFAEFkE=\");\n\n_c = BrowsePage;\nexport default BrowsePage;\n{\n  /* <Table striped bordered hover>\n     <thead>\n       <tr>\n         <th>Airline Name</th>\n         <th>Flight Number</th>\n         <th>Departure</th>\n         <th>Arrival</th>\n         <th>Price</th>\n         <th>Action</th>\n       </tr>\n     </thead>\n     <tbody>\n       {flights.map((flight, index) => (\n         <tr key={index}>\n           <td>{flight.name}</td>\n           <td>{flight.flight_number}</td>\n           <td>{flight.departure}</td>\n           <td>{flight.arrival}</td>\n           <td>{flight.price}</td>\n           <td>\n             <Button variant=\"primary\" onClick={() => handleBooking(flight)}>Book</Button>{' '}\n             <Button variant=\"danger\" onClick={() => handleCancellation(flight)}>Cancel</Button>{' '}\n           </td>\n         </tr>\n       ))}\n     </tbody>\n   </Table> */\n} // import React from 'react';\n// import Flight from \"../components/Flight\";\n// import \"./BrowsePage.css\"\n// import { Link } from \"react-router-dom\";\n// const BrowsePage = () => {\n//   const flights = [\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//   ];\n//   return (\n//     <>\n//     <h2 className=\"half-underline\" style={{color: '#00171F'}}>Available flights for your route </h2>\n//     <Link  to=\"/\" className=\"fiig\">Go back</Link>\n//     <Link  to=\"/page\" className=\"iig\">Track Your Flights</Link> \n//      <div className=\"flight-list\">\n//       {flights.map((flight, index) => (\n//         <Flight key={index} {...flight} />\n//       ))}\n//     </div>\n//     </>\n//   );\n// };\n// export default BrowsePage;\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { useEffect, useState } from \"react\";\n// // import React from \"react\";\n// // import FlightCard from \"../components/FlightCard\";\n// // import Header from \"../components/Header\";\n// // import FlightTable from \"../components/FlightTable\";\n// // import Sidebar from \"../Layout/Sidebar\";\n// // import Grid from \"@mui/material/Grid\";\n// // import { styled } from \"@mui/material/styles\";\n// // import Paper from \"@mui/material/Paper\";\n// // import Box from \"@mui/material/Box\";\n// // import \"./BrowsePage.scss\";\n// // import {\n// //   clearFlights,\n// //   filterFlights,\n// // } from \"../store/actions/searchFlightActions\";\n// // import NotFound from \"../Layout/NotFound\";\n// // const BrowsePage = () => {\n// //   const dispatch = useDispatch();\n// //   const [isStopsChecked, setIsStopsChecked] = useState([false, false]);\n// //   const [isAirlineChecked, setIsAirlineChecked] = useState([\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //   ]);\n// //   /**\n// //    * Theme for the grid\n// //    * @params theme\n// //    * @returns void\n// //    */\n// //   const Item = styled(Paper)(({ theme }) => ({\n// //     backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n// //     ...theme.typography.body2,\n// //     padding: theme.spacing(1),\n// //     textAlign: \"center\",\n// //     color: theme.palette.text.secondary,\n// //   }));\n// //   const sendStopsSelectionData = ([index1, index2]) => {\n// //     setIsStopsChecked([index1, index2]);\n// //   };\n// //   const sendAirlineSelectionData = ([\n// //     index1,\n// //     index2,\n// //     index3,\n// //     index4,\n// //     index5,\n// //   ]) => {\n// //     setIsAirlineChecked([index1, index2, index3, index4, index5]);\n// //   };\n// //   const flightData = useSelector((state) => state.flights.flights);\n// //   const filteredFlightData = useSelector(\n// //     (state) => state.flights.filteredFlights\n// //   );\n// //   const lastAction = useSelector((state) => state.flights.lastAction);\n// //   const isFlightDataLoading = useSelector(\n// //     (state) => state.flights.isFlightDataLoading\n// //   );\n// //   useEffect(() => {\n// //     if (isStopsChecked[0]) {\n// //       dispatch(filterFlights({ filterParams: \"Non Stop\", flightData }));\n// //     } else if (isStopsChecked[1]) {\n// //       dispatch(filterFlights({ filterParams: \"1 Stop\", flightData }));\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [isStopsChecked[0], isStopsChecked[1]]);\n// //   useEffect(() => {\n// //     let modifiedFlightData = filteredFlightData\n// //       ? filteredFlightData\n// //       : flightData;\n// //     if (isAirlineChecked[0]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Air Asia\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[1]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Go First\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[2]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Indigo\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[3]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Spicejet\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[4]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Vistara\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [\n// //     isAirlineChecked[0],\n// //     isAirlineChecked[1],\n// //     isAirlineChecked[2],\n// //     isAirlineChecked[3],\n// //     isAirlineChecked[4],\n// //   ]);\n// //   return (\n// //     <React.Fragment>\n// //       <Header />\n// //       <Box sx={{ flexGrow: 1 }} style={{ padding: \"5px\" }}>\n// //         <Grid container spacing={2}>\n// //           <Grid item xs={4} md={3} sm={4} className=\"filters\">\n// //             <Sidebar\n// //               sendStopsSelectionData={sendStopsSelectionData}\n// //               sendAirlineSelectionData={sendAirlineSelectionData}\n// //             />\n// //           </Grid>\n// //           <Grid item xs={8} md={9} sm={8} className=\"table-grid\">\n// //             <Item>\n// //               {isFlightDataLoading && <p>Loading</p>}\n// //               {flightData.length > 0 && (\n// //                 <React.Fragment>\n// //                   {! (!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\") &&  filteredFlightData.length !== 0 &&\n// //                   <FlightTable />}\n// //                   {!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\"\n// //                     ? flightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })\n// //                     :( filteredFlightData.length === 0)? \n// //                      <NotFound message=\"Sorry for the inconvenience. We could not find any flights!\"/>\n// //                     : filteredFlightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })}\n// //                 </React.Fragment>\n// //               )}\n// //             </Item>\n// //           </Grid>\n// //         </Grid>\n// //       </Box>\n// //     </React.Fragment>\n// //   );\n// // };\n// // export default BrowsePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowsePage\");","map":{"version":3,"sources":["/home/dom/Videos/FlyM/src/pages/BrowsePage.js"],"names":["React","useState","useEffect","BrowsePage","flightNumber","setFlightNumber","departureDate","setDepartureDate","flightInfo","setFlightInfo","bookingStatus","setBookingStatus","API_KEY","API_URL","fetchFlightInfo","response","fetch","method","headers","data","json","handleBookFlight","handleRescheduleFlight","handleCancelFlight","e","target","value","departureAirport","arrivalAirport","scheduledDepartureTime","scheduledArrivalTime"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\n\nconst BrowsePage = () => {\n  const [flightNumber, setFlightNumber] = useState(\"\");\n  const [departureDate, setDepartureDate] = useState(\"\");\n  const [flightInfo, setFlightInfo] = useState({});\n  const [bookingStatus, setBookingStatus] = useState(\"\");\n\n  const API_KEY = \"deb48d2e96msh1042a56aa3afa71p1c4e5ajsnb5a15b5cd394\";\n  const API_URL = `https://community-british-airways-flight-info.p.rapidapi.com/flights;flightNumber=${flightNumber};scheduledDepartureDate=${departureDate}.json`;\n\n  useEffect(() => {\n    const fetchFlightInfo = async () => {\n      const response = await fetch(API_URL, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": API_KEY,\n          \"x-rapidapi-host\":\n            \"community-british-airways-flight-info.p.rapidapi.com\",\n        },\n      });\n      const data = await response.json();\n      setFlightInfo(data);\n    };\n\n    if (flightNumber !== \"\" && departureDate !== \"\") {\n      fetchFlightInfo();\n    }\n  }, [flightNumber, departureDate]);\n\n  const handleBookFlight = () => {\n    setBookingStatus(\"Booked\");\n  };\n\n  const handleRescheduleFlight = () => {\n    setBookingStatus(\"Rescheduled\");\n  };\n\n  const handleCancelFlight = () => {\n    if (bookingStatus === \"Booked\") {\n      setBookingStatus(\"Cancelled\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Flight Booking</h2>\n      <form>\n        <label htmlFor=\"flightNumber\">Flight Number:</label>\n        <input\n          type=\"text\"\n          id=\"flightNumber\"\n          value={flightNumber}\n          onChange={(e) => setFlightNumber(e.target.value)}\n        />\n        <br />\n        <label htmlFor=\"departureDate\">Departure Date:</label>\n        <input\n          type=\"date\"\n          id=\"departureDate\"\n          value={departureDate}\n          onChange={(e) => setDepartureDate(e.target.value)}\n        />\n      </form>\n      <h3>Flight Information</h3>\n      {flightInfo.flightNumber && (\n        <div>\n          <p>\n            Flight Number: {flightInfo.flightNumber}\n            <br />\n            Departure Airport: {flightInfo.departureAirport}\n            <br />\n            Arrival Airport: {flightInfo.arrivalAirport}\n            <br />\n            Scheduled Departure Time: {flightInfo.scheduledDepartureTime}\n            <br />\n            Scheduled Arrival Time: {flightInfo.scheduledArrivalTime}\n          </p>\n          <div>\n            <button onClick={handleBookFlight}>Book Flight</button>\n            <button onClick={handleRescheduleFlight}>Reschedule Flight</button>\n            {bookingStatus === \"Booked\" && (\n              <button onClick={handleCancelFlight}>Cancel Flight</button>\n            )}\n          </div>\n          <p>Booking Status: {bookingStatus}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\n\nexport default BrowsePage;\n\n\n\n\n\n \n \n    \n    {/* <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Airline Name</th>\n            <th>Flight Number</th>\n            <th>Departure</th>\n            <th>Arrival</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {flights.map((flight, index) => (\n            <tr key={index}>\n              <td>{flight.name}</td>\n              <td>{flight.flight_number}</td>\n              <td>{flight.departure}</td>\n              <td>{flight.arrival}</td>\n              <td>{flight.price}</td>\n              <td>\n                <Button variant=\"primary\" onClick={() => handleBooking(flight)}>Book</Button>{' '}\n                <Button variant=\"danger\" onClick={() => handleCancellation(flight)}>Cancel</Button>{' '}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table> */}\n    \n\n// import React from 'react';\n// import Flight from \"../components/Flight\";\n// import \"./BrowsePage.css\"\n// import { Link } from \"react-router-dom\";\n\n// const BrowsePage = () => {\n//   const flights = [\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//   ];\n\n//   return (\n//     <>\n  \n//     <h2 className=\"half-underline\" style={{color: '#00171F'}}>Available flights for your route </h2>\n//     <Link  to=\"/\" className=\"fiig\">Go back</Link>\n//     <Link  to=\"/page\" className=\"iig\">Track Your Flights</Link> \n//      <div className=\"flight-list\">\n//       {flights.map((flight, index) => (\n//         <Flight key={index} {...flight} />\n//       ))}\n//     </div>\n    \n//     </>\n   \n//   );\n// };\n\n\n\n// export default BrowsePage;\n\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { useEffect, useState } from \"react\";\n// // import React from \"react\";\n// // import FlightCard from \"../components/FlightCard\";\n// // import Header from \"../components/Header\";\n// // import FlightTable from \"../components/FlightTable\";\n// // import Sidebar from \"../Layout/Sidebar\";\n\n// // import Grid from \"@mui/material/Grid\";\n// // import { styled } from \"@mui/material/styles\";\n// // import Paper from \"@mui/material/Paper\";\n// // import Box from \"@mui/material/Box\";\n\n// // import \"./BrowsePage.scss\";\n// // import {\n// //   clearFlights,\n// //   filterFlights,\n// // } from \"../store/actions/searchFlightActions\";\n// // import NotFound from \"../Layout/NotFound\";\n\n// // const BrowsePage = () => {\n// //   const dispatch = useDispatch();\n\n// //   const [isStopsChecked, setIsStopsChecked] = useState([false, false]);\n// //   const [isAirlineChecked, setIsAirlineChecked] = useState([\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //   ]);\n\n// //   /**\n// //    * Theme for the grid\n// //    * @params theme\n// //    * @returns void\n// //    */\n// //   const Item = styled(Paper)(({ theme }) => ({\n// //     backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n// //     ...theme.typography.body2,\n// //     padding: theme.spacing(1),\n// //     textAlign: \"center\",\n// //     color: theme.palette.text.secondary,\n// //   }));\n\n// //   const sendStopsSelectionData = ([index1, index2]) => {\n// //     setIsStopsChecked([index1, index2]);\n// //   };\n\n// //   const sendAirlineSelectionData = ([\n// //     index1,\n// //     index2,\n// //     index3,\n// //     index4,\n// //     index5,\n// //   ]) => {\n// //     setIsAirlineChecked([index1, index2, index3, index4, index5]);\n// //   };\n\n// //   const flightData = useSelector((state) => state.flights.flights);\n// //   const filteredFlightData = useSelector(\n// //     (state) => state.flights.filteredFlights\n// //   );\n// //   const lastAction = useSelector((state) => state.flights.lastAction);\n// //   const isFlightDataLoading = useSelector(\n// //     (state) => state.flights.isFlightDataLoading\n// //   );\n\n// //   useEffect(() => {\n// //     if (isStopsChecked[0]) {\n// //       dispatch(filterFlights({ filterParams: \"Non Stop\", flightData }));\n// //     } else if (isStopsChecked[1]) {\n// //       dispatch(filterFlights({ filterParams: \"1 Stop\", flightData }));\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [isStopsChecked[0], isStopsChecked[1]]);\n\n// //   useEffect(() => {\n// //     let modifiedFlightData = filteredFlightData\n// //       ? filteredFlightData\n// //       : flightData;\n// //     if (isAirlineChecked[0]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Air Asia\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[1]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Go First\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[2]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Indigo\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[3]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Spicejet\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[4]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Vistara\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [\n// //     isAirlineChecked[0],\n// //     isAirlineChecked[1],\n// //     isAirlineChecked[2],\n// //     isAirlineChecked[3],\n// //     isAirlineChecked[4],\n// //   ]);\n\n// //   return (\n// //     <React.Fragment>\n// //       <Header />\n// //       <Box sx={{ flexGrow: 1 }} style={{ padding: \"5px\" }}>\n// //         <Grid container spacing={2}>\n// //           <Grid item xs={4} md={3} sm={4} className=\"filters\">\n// //             <Sidebar\n// //               sendStopsSelectionData={sendStopsSelectionData}\n// //               sendAirlineSelectionData={sendAirlineSelectionData}\n// //             />\n// //           </Grid>\n// //           <Grid item xs={8} md={9} sm={8} className=\"table-grid\">\n// //             <Item>\n// //               {isFlightDataLoading && <p>Loading</p>}\n// //               {flightData.length > 0 && (\n// //                 <React.Fragment>\n// //                   {! (!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\") &&  filteredFlightData.length !== 0 &&\n// //                   <FlightTable />}\n// //                   {!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\"\n// //                     ? flightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })\n// //                     :( filteredFlightData.length === 0)? \n// //                      <NotFound message=\"Sorry for the inconvenience. We could not find any flights!\"/>\n// //                     : filteredFlightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })}\n// //                 </React.Fragment>\n// //               )}\n// //             </Item>\n// //           </Grid>\n// //         </Grid>\n// //       </Box>\n// //     </React.Fragment>\n// //   );\n// // };\n// // export default BrowsePage;\n\n\n"]},"metadata":{},"sourceType":"module"}