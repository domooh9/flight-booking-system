{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n/**\n * A namespaced client for the\n * `/v1/reference-data/airlines` endpoints\n *\n * Access via the {@link Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.referenceData.airlines;\n * ```\n *\n * @param {Client} client\n */\n\n\nvar Airlines = /*#__PURE__*/function () {\n  function Airlines(client) {\n    _classCallCheck(this, Airlines);\n\n    this.client = client;\n  }\n  /**\n   * Returns the airline name and code.\n   *\n   * @param {Object} params\n   * @param {string} params.airlineCodes Code of the airline following IATA or ICAO standard.\n   * @return {Promise.<Response,ResponseError>} a Promise\n   *\n   * Find to which airlines belongs IATA Code BA\n   *\n   * ```js\n   * amadeus.referenceData.airlines.get({\n   *   airlineCodes : 'BA'\n   * });\n   * ```\n   */\n\n\n  _createClass(Airlines, [{\n    key: \"get\",\n    value: function get() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.client.get('/v1/reference-data/airlines', params);\n    }\n  }]);\n\n  return Airlines;\n}();\n\nvar _default = Airlines;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAZA,IAaMA,QAAQ;AACZ,oBAAYC,MAAZ,EAAoB;AAAAC;;AAClB,SAAKD,MAAL,GAAcA,MAAd;AACF;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAdEE;AAAAC;AAAAC,WAeA,eAAiB;AAAA,UAAbC,MAAM,uEAAG,EAAI;AACf,aAAO,KAAKL,MAAL,CAAYM,GAAZ,CAAgB,6BAAhB,EAA+CD,MAA/C,CAAP;AACF;AAjBA;;AAiBC;AAAA,CAtBW,EAbd;;AAmCG,eAGYN,QAHZ;AAGoBQ;AAAAC","names":["Airlines","client","_classCallCheck","_createClass","key","value","params","get","exports","module"],"sources":["/home/dom/Videos/FlyM/node_modules/amadeus/src/amadeus/namespaces/reference_data/airlines.js"],"sourcesContent":["/**\n * A namespaced client for the\n * `/v1/reference-data/airlines` endpoints\n *\n * Access via the {@link Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.referenceData.airlines;\n * ```\n *\n * @param {Client} client\n */\nclass Airlines{\n  constructor(client) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the airline name and code.\n   *\n   * @param {Object} params\n   * @param {string} params.airlineCodes Code of the airline following IATA or ICAO standard.\n   * @return {Promise.<Response,ResponseError>} a Promise\n   *\n   * Find to which airlines belongs IATA Code BA\n   *\n   * ```js\n   * amadeus.referenceData.airlines.get({\n   *   airlineCodes : 'BA'\n   * });\n   * ```\n   */\n  get(params = {}) {\n    return this.client.get('/v1/reference-data/airlines', params);\n  }\n}\n\nexport default Airlines;\n"]},"metadata":{},"sourceType":"script"}