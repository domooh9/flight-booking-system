{"ast":null,"code":"var _jsxFileName = \"/home/dom/Videos/FlyM/src/components/AdminLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Admindash from './Admindash';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminLogin = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isAdminLoggedIn, setIsAdminLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check if the user is already logged in\n    const isLoggedIn = localStorage.getItem('isAdminLoggedIn') === 'true';\n    setIsAdminLoggedIn(isLoggedIn);\n  }, []);\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleLogin = event => {\n    event.preventDefault();\n\n    if (username === 'John Doe' && password === '12345') {\n      setIsAdminLoggedIn(true); // Set the login status in local storage\n\n      localStorage.setItem('isAdminLoggedIn', true);\n    } else {\n      alert('Invalid username or password');\n    }\n  };\n\n  const handleLogout = () => {\n    setIsAdminLoggedIn(false); // Remove the login status from local storage\n\n    localStorage.removeItem('isAdminLoggedIn');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Auth-form-container\",\n    children: isAdminLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Admindash, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Auth-form\",\n      onSubmit: handleLogin,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Auth-form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Auth-form-title\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control mt-1\",\n            type: \"text\",\n            value: username,\n            onChange: handleUsernameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control mt-1\",\n            type: \"password\",\n            value: password,\n            onChange: handlePasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2 mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminLogin, \"snTguhKu5MxZerCd/pVywS05Aug=\");\n\n_c = AdminLogin;\nexport default AdminLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"sources":["/home/dom/Videos/FlyM/src/components/AdminLogin.js"],"names":["React","useState","useEffect","Admindash","Link","AdminLogin","username","setUsername","password","setPassword","isAdminLoggedIn","setIsAdminLoggedIn","isLoggedIn","localStorage","getItem","handleUsernameChange","event","target","value","handlePasswordChange","handleLogin","preventDefault","setItem","alert","handleLogout","removeItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Admindash from './Admindash';\nimport {Link} from \"react-router-dom\";\n\nconst AdminLogin = () => {\n  \n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isAdminLoggedIn, setIsAdminLoggedIn] = useState(false);\n\n  useEffect(() => {\n    // Check if the user is already logged in\n    const isLoggedIn = localStorage.getItem('isAdminLoggedIn') === 'true';\n    setIsAdminLoggedIn(isLoggedIn);\n  }, []);\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    if (username === 'John Doe' && password === '12345') {\n      setIsAdminLoggedIn(true);\n      // Set the login status in local storage\n      localStorage.setItem('isAdminLoggedIn', true);\n    } else {\n      alert('Invalid username or password');\n    }\n  };\n\n  const handleLogout = () => {\n    setIsAdminLoggedIn(false);\n    // Remove the login status from local storage\n    localStorage.removeItem('isAdminLoggedIn');\n  };\n \n\n  return (\n    <div className=\"Auth-form-container\">\n      {isAdminLoggedIn ? (\n        <div>\n          <Admindash />\n          <button onClick={handleLogout}>Logout</button>\n        </div>\n      ) : (\n        <form className=\"Auth-form\" onSubmit={handleLogin}>\n          <div className=\"Auth-form-content\">\n            <h3 className=\"Auth-form-title\">Admin</h3>\n            <div className=\"form-group mt-3\">\n              <label>Username</label>\n              <input className=\"form-control mt-1\" type=\"text\" value={username} onChange={handleUsernameChange} />\n            </div>\n            <div className=\"form-group mt-3\">\n              <label>Password</label>\n              <input className=\"form-control mt-1\" type=\"password\" value={password} onChange={handlePasswordChange} />\n            </div>\n            <div className=\"d-grid gap-2 mt-3\">\n              <button className=\"btn btn-primary\" type=\"submit\">\n                Login\n              </button>\n            </div>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default AdminLogin;"]},"metadata":{},"sourceType":"module"}