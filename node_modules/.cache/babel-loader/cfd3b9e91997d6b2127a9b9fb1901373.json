{"ast":null,"code":"var _jsxFileName = \"/home/dom/Videos/FlyM/src/pages/BrowsePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Amadeus from 'amadeus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst amadeus = new Amadeus({\n  clientId: 'xge4TD4YcAJXPNAJNlY2lscGJQySEQIi',\n  clientSecret: 'vePijExjyQvNFQsB'\n});\n\nfunction BrowsePage() {\n  _s();\n\n  const [flights, setFlights] = useState([]);\n  const [selectedFlight, setSelectedFlight] = useState(null);\n  const [bookingSuccess, setBookingSuccess] = useState(false);\n  const [cancellationSuccess, setCancellationSuccess] = useState(false);\n  const [reschedulingSuccess, setReschedulingSuccess] = useState(false);\n  useEffect(() => {\n    amadeus.shopping.flightOffers.get({\n      originLocationCode: 'BOS',\n      destinationLocationCode: 'LAX',\n      departureDate: '2023-04-01',\n      adults: 1,\n      currencyCode: 'USD'\n    }).then(response => {\n      setFlights(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n\n  function handleSelectFlight(flight) {\n    setSelectedFlight(flight);\n  }\n\n  function handleBookFlight() {\n    amadeus.booking.flightOrders.post({\n      data: {\n        type: 'flight-order',\n        flightOffers: [{\n          id: selectedFlight.id\n        }],\n        travelerInfo: [{\n          id: '1',\n          contact: {\n            emailAddress: 'test@example.com'\n          },\n          name: {\n            firstName: 'John',\n            lastName: 'Doe'\n          }\n        }]\n      }\n    }).then(response => {\n      setBookingSuccess(true);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  function handleCancelFlight() {\n    amadeus.booking.flightOrder(flightOrderId).delete().then(response => {\n      setCancellationSuccess(true);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  function handleRescheduleFlight() {\n    amadeus.booking.flightOrder(flightOrderId).put({\n      data: {\n        type: 'flight-order',\n        flightOffers: [{\n          id: newFlightId\n        }]\n      }\n    }).then(response => {\n      setReschedulingSuccess(true);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [flights.map(flight => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [flight.itineraries[0].segments[0].departure.iataCode, \" - \", flight.itineraries[0].segments[0].arrival.iataCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [flight.price.total, \" \", flight.price.currency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSelectFlight(flight),\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, flight.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)), selectedFlight && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [selectedFlight.itineraries[0].segments[0].departure.iataCode, \" - \", selectedFlight.itineraries[0].segments[0].arrival.iataCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [selectedFlight.price.total, \" \", selectedFlight.price.currency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBookFlight,\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), bookingSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Booking successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), cancellationSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cancellation successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), reschedulingSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Rescheduling successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BrowsePage, \"vj4B+6kgczpnd707nQ/vSk1+t5s=\");\n\n_c = BrowsePage;\nexport default BrowsePage;\n{\n  /* <Table striped bordered hover>\n     <thead>\n       <tr>\n         <th>Airline Name</th>\n         <th>Flight Number</th>\n         <th>Departure</th>\n         <th>Arrival</th>\n         <th>Price</th>\n         <th>Action</th>\n       </tr>\n     </thead>\n     <tbody>\n       {flights.map((flight, index) => (\n         <tr key={index}>\n           <td>{flight.name}</td>\n           <td>{flight.flight_number}</td>\n           <td>{flight.departure}</td>\n           <td>{flight.arrival}</td>\n           <td>{flight.price}</td>\n           <td>\n             <Button variant=\"primary\" onClick={() => handleBooking(flight)}>Book</Button>{' '}\n             <Button variant=\"danger\" onClick={() => handleCancellation(flight)}>Cancel</Button>{' '}\n           </td>\n         </tr>\n       ))}\n     </tbody>\n   </Table> */\n} // import React from 'react';\n// import Flight from \"../components/Flight\";\n// import \"./BrowsePage.css\"\n// import { Link } from \"react-router-dom\";\n// const BrowsePage = () => {\n//   const flights = [\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//   ];\n//   return (\n//     <>\n//     <h2 className=\"half-underline\" style={{color: '#00171F'}}>Available flights for your route </h2>\n//     <Link  to=\"/\" className=\"fiig\">Go back</Link>\n//     <Link  to=\"/page\" className=\"iig\">Track Your Flights</Link> \n//      <div className=\"flight-list\">\n//       {flights.map((flight, index) => (\n//         <Flight key={index} {...flight} />\n//       ))}\n//     </div>\n//     </>\n//   );\n// };\n// export default BrowsePage;\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { useEffect, useState } from \"react\";\n// // import React from \"react\";\n// // import FlightCard from \"../components/FlightCard\";\n// // import Header from \"../components/Header\";\n// // import FlightTable from \"../components/FlightTable\";\n// // import Sidebar from \"../Layout/Sidebar\";\n// // import Grid from \"@mui/material/Grid\";\n// // import { styled } from \"@mui/material/styles\";\n// // import Paper from \"@mui/material/Paper\";\n// // import Box from \"@mui/material/Box\";\n// // import \"./BrowsePage.scss\";\n// // import {\n// //   clearFlights,\n// //   filterFlights,\n// // } from \"../store/actions/searchFlightActions\";\n// // import NotFound from \"../Layout/NotFound\";\n// // const BrowsePage = () => {\n// //   const dispatch = useDispatch();\n// //   const [isStopsChecked, setIsStopsChecked] = useState([false, false]);\n// //   const [isAirlineChecked, setIsAirlineChecked] = useState([\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //   ]);\n// //   /**\n// //    * Theme for the grid\n// //    * @params theme\n// //    * @returns void\n// //    */\n// //   const Item = styled(Paper)(({ theme }) => ({\n// //     backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n// //     ...theme.typography.body2,\n// //     padding: theme.spacing(1),\n// //     textAlign: \"center\",\n// //     color: theme.palette.text.secondary,\n// //   }));\n// //   const sendStopsSelectionData = ([index1, index2]) => {\n// //     setIsStopsChecked([index1, index2]);\n// //   };\n// //   const sendAirlineSelectionData = ([\n// //     index1,\n// //     index2,\n// //     index3,\n// //     index4,\n// //     index5,\n// //   ]) => {\n// //     setIsAirlineChecked([index1, index2, index3, index4, index5]);\n// //   };\n// //   const flightData = useSelector((state) => state.flights.flights);\n// //   const filteredFlightData = useSelector(\n// //     (state) => state.flights.filteredFlights\n// //   );\n// //   const lastAction = useSelector((state) => state.flights.lastAction);\n// //   const isFlightDataLoading = useSelector(\n// //     (state) => state.flights.isFlightDataLoading\n// //   );\n// //   useEffect(() => {\n// //     if (isStopsChecked[0]) {\n// //       dispatch(filterFlights({ filterParams: \"Non Stop\", flightData }));\n// //     } else if (isStopsChecked[1]) {\n// //       dispatch(filterFlights({ filterParams: \"1 Stop\", flightData }));\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [isStopsChecked[0], isStopsChecked[1]]);\n// //   useEffect(() => {\n// //     let modifiedFlightData = filteredFlightData\n// //       ? filteredFlightData\n// //       : flightData;\n// //     if (isAirlineChecked[0]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Air Asia\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[1]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Go First\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[2]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Indigo\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[3]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Spicejet\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[4]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Vistara\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [\n// //     isAirlineChecked[0],\n// //     isAirlineChecked[1],\n// //     isAirlineChecked[2],\n// //     isAirlineChecked[3],\n// //     isAirlineChecked[4],\n// //   ]);\n// //   return (\n// //     <React.Fragment>\n// //       <Header />\n// //       <Box sx={{ flexGrow: 1 }} style={{ padding: \"5px\" }}>\n// //         <Grid container spacing={2}>\n// //           <Grid item xs={4} md={3} sm={4} className=\"filters\">\n// //             <Sidebar\n// //               sendStopsSelectionData={sendStopsSelectionData}\n// //               sendAirlineSelectionData={sendAirlineSelectionData}\n// //             />\n// //           </Grid>\n// //           <Grid item xs={8} md={9} sm={8} className=\"table-grid\">\n// //             <Item>\n// //               {isFlightDataLoading && <p>Loading</p>}\n// //               {flightData.length > 0 && (\n// //                 <React.Fragment>\n// //                   {! (!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\") &&  filteredFlightData.length !== 0 &&\n// //                   <FlightTable />}\n// //                   {!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\"\n// //                     ? flightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })\n// //                     :( filteredFlightData.length === 0)? \n// //                      <NotFound message=\"Sorry for the inconvenience. We could not find any flights!\"/>\n// //                     : filteredFlightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })}\n// //                 </React.Fragment>\n// //               )}\n// //             </Item>\n// //           </Grid>\n// //         </Grid>\n// //       </Box>\n// //     </React.Fragment>\n// //   );\n// // };\n// // export default BrowsePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowsePage\");","map":{"version":3,"sources":["/home/dom/Videos/FlyM/src/pages/BrowsePage.js"],"names":["React","useState","useEffect","Amadeus","amadeus","clientId","clientSecret","BrowsePage","flights","setFlights","selectedFlight","setSelectedFlight","bookingSuccess","setBookingSuccess","cancellationSuccess","setCancellationSuccess","reschedulingSuccess","setReschedulingSuccess","shopping","flightOffers","get","originLocationCode","destinationLocationCode","departureDate","adults","currencyCode","then","response","data","catch","error","console","handleSelectFlight","flight","handleBookFlight","booking","flightOrders","post","type","id","travelerInfo","contact","emailAddress","name","firstName","lastName","handleCancelFlight","flightOrder","flightOrderId","delete","handleRescheduleFlight","put","newFlightId","map","itineraries","segments","departure","iataCode","arrival","price","total","currency"],"mappings":"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":["import React, { useState, useEffect } from 'react';\nimport Amadeus from 'amadeus';\n\n\nconst amadeus = new Amadeus({\n  clientId: 'xge4TD4YcAJXPNAJNlY2lscGJQySEQIi',\n  clientSecret: 'vePijExjyQvNFQsB',\n});\n\nfunction BrowsePage() {\n  const [flights, setFlights] = useState([]);\n  const [selectedFlight, setSelectedFlight] = useState(null);\n  const [bookingSuccess, setBookingSuccess] = useState(false);\n  const [cancellationSuccess, setCancellationSuccess] = useState(false);\n  const [reschedulingSuccess, setReschedulingSuccess] = useState(false);\n\n  useEffect(() => {\n    amadeus.shopping.flightOffers.get({\n      originLocationCode: 'BOS',\n      destinationLocationCode: 'LAX',\n      departureDate: '2023-04-01',\n      adults: 1,\n      currencyCode: 'USD',\n    }).then(response => {\n      setFlights(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n\n  function handleSelectFlight(flight) {\n    setSelectedFlight(flight);\n  }\n\n  function handleBookFlight() {\n    amadeus.booking.flightOrders.post({\n      data: {\n        type: 'flight-order',\n        flightOffers: [\n          {\n            id: selectedFlight.id,\n          },\n        ],\n        travelerInfo: [\n          {\n            id: '1',\n            contact: {\n              emailAddress: 'test@example.com',\n            },\n            name: {\n              firstName: 'John',\n              lastName: 'Doe',\n            },\n          },\n        ],\n      },\n    }).then(response => {\n      setBookingSuccess(true);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  function handleCancelFlight() {\n    amadeus.booking.flightOrder(flightOrderId).delete().then(response => {\n      setCancellationSuccess(true);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  function handleRescheduleFlight() {\n    amadeus.booking.flightOrder(flightOrderId).put({\n      data: {\n        type: 'flight-order',\n        flightOffers: [\n          {\n            id: newFlightId,\n          },\n        ],\n      },\n    }).then(response => {\n      setReschedulingSuccess(true);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  return (\n    <div>\n      {flights.map(flight => (\n        <div key={flight.id}>\n          <h3>{flight.itineraries[0].segments[0].departure.iataCode} - {flight.itineraries[0].segments[0].arrival.iataCode}</h3>\n          <p>{flight.price.total} {flight.price.currency}</p>\n          <button onClick={() => handleSelectFlight(flight)}>Select</button>\n        </div>\n      ))}\n      {selectedFlight && (\n        <div>\n          <h3>{selectedFlight.itineraries[0].segments[0].departure.iataCode} - {selectedFlight.itineraries[0].segments[0].arrival.iataCode}</h3>\n          <p>{selectedFlight.price.total} {selectedFlight.price.currency}</p>\n          <button onClick={handleBookFlight}>Book</button>\n        </div>\n      )}\n      {bookingSuccess && (\n        <p>Booking successful!</p>\n      )}\n      {cancellationSuccess && (\n        <p>Cancellation successful!</p>\n      )}\n      {reschedulingSuccess && (\n        <p>Rescheduling successful!</p>\n      )}\n    </div>\n     );\n    }\n    export default BrowsePage\n\n\n\n\n\n \n \n    \n    {/* <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Airline Name</th>\n            <th>Flight Number</th>\n            <th>Departure</th>\n            <th>Arrival</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {flights.map((flight, index) => (\n            <tr key={index}>\n              <td>{flight.name}</td>\n              <td>{flight.flight_number}</td>\n              <td>{flight.departure}</td>\n              <td>{flight.arrival}</td>\n              <td>{flight.price}</td>\n              <td>\n                <Button variant=\"primary\" onClick={() => handleBooking(flight)}>Book</Button>{' '}\n                <Button variant=\"danger\" onClick={() => handleCancellation(flight)}>Cancel</Button>{' '}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table> */}\n    \n\n// import React from 'react';\n// import Flight from \"../components/Flight\";\n// import \"./BrowsePage.css\"\n// import { Link } from \"react-router-dom\";\n\n// const BrowsePage = () => {\n//   const flights = [\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//   ];\n\n//   return (\n//     <>\n  \n//     <h2 className=\"half-underline\" style={{color: '#00171F'}}>Available flights for your route </h2>\n//     <Link  to=\"/\" className=\"fiig\">Go back</Link>\n//     <Link  to=\"/page\" className=\"iig\">Track Your Flights</Link> \n//      <div className=\"flight-list\">\n//       {flights.map((flight, index) => (\n//         <Flight key={index} {...flight} />\n//       ))}\n//     </div>\n    \n//     </>\n   \n//   );\n// };\n\n\n\n// export default BrowsePage;\n\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { useEffect, useState } from \"react\";\n// // import React from \"react\";\n// // import FlightCard from \"../components/FlightCard\";\n// // import Header from \"../components/Header\";\n// // import FlightTable from \"../components/FlightTable\";\n// // import Sidebar from \"../Layout/Sidebar\";\n\n// // import Grid from \"@mui/material/Grid\";\n// // import { styled } from \"@mui/material/styles\";\n// // import Paper from \"@mui/material/Paper\";\n// // import Box from \"@mui/material/Box\";\n\n// // import \"./BrowsePage.scss\";\n// // import {\n// //   clearFlights,\n// //   filterFlights,\n// // } from \"../store/actions/searchFlightActions\";\n// // import NotFound from \"../Layout/NotFound\";\n\n// // const BrowsePage = () => {\n// //   const dispatch = useDispatch();\n\n// //   const [isStopsChecked, setIsStopsChecked] = useState([false, false]);\n// //   const [isAirlineChecked, setIsAirlineChecked] = useState([\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //   ]);\n\n// //   /**\n// //    * Theme for the grid\n// //    * @params theme\n// //    * @returns void\n// //    */\n// //   const Item = styled(Paper)(({ theme }) => ({\n// //     backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n// //     ...theme.typography.body2,\n// //     padding: theme.spacing(1),\n// //     textAlign: \"center\",\n// //     color: theme.palette.text.secondary,\n// //   }));\n\n// //   const sendStopsSelectionData = ([index1, index2]) => {\n// //     setIsStopsChecked([index1, index2]);\n// //   };\n\n// //   const sendAirlineSelectionData = ([\n// //     index1,\n// //     index2,\n// //     index3,\n// //     index4,\n// //     index5,\n// //   ]) => {\n// //     setIsAirlineChecked([index1, index2, index3, index4, index5]);\n// //   };\n\n// //   const flightData = useSelector((state) => state.flights.flights);\n// //   const filteredFlightData = useSelector(\n// //     (state) => state.flights.filteredFlights\n// //   );\n// //   const lastAction = useSelector((state) => state.flights.lastAction);\n// //   const isFlightDataLoading = useSelector(\n// //     (state) => state.flights.isFlightDataLoading\n// //   );\n\n// //   useEffect(() => {\n// //     if (isStopsChecked[0]) {\n// //       dispatch(filterFlights({ filterParams: \"Non Stop\", flightData }));\n// //     } else if (isStopsChecked[1]) {\n// //       dispatch(filterFlights({ filterParams: \"1 Stop\", flightData }));\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [isStopsChecked[0], isStopsChecked[1]]);\n\n// //   useEffect(() => {\n// //     let modifiedFlightData = filteredFlightData\n// //       ? filteredFlightData\n// //       : flightData;\n// //     if (isAirlineChecked[0]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Air Asia\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[1]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Go First\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[2]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Indigo\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[3]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Spicejet\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[4]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Vistara\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [\n// //     isAirlineChecked[0],\n// //     isAirlineChecked[1],\n// //     isAirlineChecked[2],\n// //     isAirlineChecked[3],\n// //     isAirlineChecked[4],\n// //   ]);\n\n// //   return (\n// //     <React.Fragment>\n// //       <Header />\n// //       <Box sx={{ flexGrow: 1 }} style={{ padding: \"5px\" }}>\n// //         <Grid container spacing={2}>\n// //           <Grid item xs={4} md={3} sm={4} className=\"filters\">\n// //             <Sidebar\n// //               sendStopsSelectionData={sendStopsSelectionData}\n// //               sendAirlineSelectionData={sendAirlineSelectionData}\n// //             />\n// //           </Grid>\n// //           <Grid item xs={8} md={9} sm={8} className=\"table-grid\">\n// //             <Item>\n// //               {isFlightDataLoading && <p>Loading</p>}\n// //               {flightData.length > 0 && (\n// //                 <React.Fragment>\n// //                   {! (!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\") &&  filteredFlightData.length !== 0 &&\n// //                   <FlightTable />}\n// //                   {!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\"\n// //                     ? flightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })\n// //                     :( filteredFlightData.length === 0)? \n// //                      <NotFound message=\"Sorry for the inconvenience. We could not find any flights!\"/>\n// //                     : filteredFlightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })}\n// //                 </React.Fragment>\n// //               )}\n// //             </Item>\n// //           </Grid>\n// //         </Grid>\n// //       </Box>\n// //     </React.Fragment>\n// //   );\n// // };\n// // export default BrowsePage;\n\n\n"]},"metadata":{},"sourceType":"module"}