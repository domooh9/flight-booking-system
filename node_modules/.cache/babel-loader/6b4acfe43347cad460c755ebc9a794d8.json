{"ast":null,"code":"\"use strict\";\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAnIpAddress = void 0;\n\nfunction isAnIpAddress(ipaddress) {\n  return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipaddress);\n}\n\nexports.isAnIpAddress = isAnIpAddress;\n\nvar NormalisedURLDomain =\n/** @class */\nfunction () {\n  function NormalisedURLDomain(url) {\n    var _this = this;\n\n    this.getAsStringDangerous = function () {\n      return _this.value;\n    };\n\n    this.value = normaliseURLDomainOrThrowError(url);\n  }\n\n  return NormalisedURLDomain;\n}();\n\nexports.default = NormalisedURLDomain;\n\nfunction normaliseURLDomainOrThrowError(input, ignoreProtocol) {\n  if (ignoreProtocol === void 0) {\n    ignoreProtocol = false;\n  }\n\n  input = input.trim();\n\n  try {\n    if (!input.startsWith(\"http://\") && !input.startsWith(\"https://\")) {\n      throw new Error(\"converting to proper URL\");\n    }\n\n    var urlObj = new URL(input);\n\n    if (ignoreProtocol) {\n      if (urlObj.hostname.startsWith(\"localhost\") || isAnIpAddress(urlObj.hostname)) {\n        input = \"http://\" + urlObj.host;\n      } else {\n        input = \"https://\" + urlObj.host;\n      }\n    } else {\n      input = urlObj.protocol + \"//\" + urlObj.host;\n    }\n\n    return input; // eslint-disable-next-line no-empty\n  } catch (err) {}\n\n  if (input.startsWith(\"/\")) {\n    throw new Error(\"Please provide a valid domain name\");\n  } // not a valid URL\n\n\n  if (input.indexOf(\".\") === 0) {\n    input = input.substr(1);\n  } // If the input contains a . it means they have given a domain name.\n  // So we try assuming that they have given a domain name\n\n\n  if ((input.indexOf(\".\") !== -1 || input.startsWith(\"localhost\")) && !input.startsWith(\"http://\") && !input.startsWith(\"https://\")) {\n    input = \"https://\" + input; // at this point, it should be a valid URL. So we test that before doing a recursive call\n\n    try {\n      new URL(input);\n      return normaliseURLDomainOrThrowError(input, true); // eslint-disable-next-line no-empty\n    } catch (err) {}\n  }\n\n  throw new Error(\"Please provide a valid domain name\");\n}","map":{"version":3,"sources":["/home/dom/FlyM/node_modules/supertokens-website/lib/build/normalisedURLDomain.js"],"names":["Object","defineProperty","exports","value","isAnIpAddress","ipaddress","test","NormalisedURLDomain","url","_this","getAsStringDangerous","normaliseURLDomainOrThrowError","default","input","ignoreProtocol","trim","startsWith","Error","urlObj","URL","hostname","host","protocol","err","indexOf","substr"],"mappings":"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","sourcesContent":["\"use strict\";\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAnIpAddress = void 0;\nfunction isAnIpAddress(ipaddress) {\n    return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n        ipaddress\n    );\n}\nexports.isAnIpAddress = isAnIpAddress;\nvar NormalisedURLDomain = /** @class */ (function () {\n    function NormalisedURLDomain(url) {\n        var _this = this;\n        this.getAsStringDangerous = function () {\n            return _this.value;\n        };\n        this.value = normaliseURLDomainOrThrowError(url);\n    }\n    return NormalisedURLDomain;\n})();\nexports.default = NormalisedURLDomain;\nfunction normaliseURLDomainOrThrowError(input, ignoreProtocol) {\n    if (ignoreProtocol === void 0) {\n        ignoreProtocol = false;\n    }\n    input = input.trim();\n    try {\n        if (!input.startsWith(\"http://\") && !input.startsWith(\"https://\")) {\n            throw new Error(\"converting to proper URL\");\n        }\n        var urlObj = new URL(input);\n        if (ignoreProtocol) {\n            if (urlObj.hostname.startsWith(\"localhost\") || isAnIpAddress(urlObj.hostname)) {\n                input = \"http://\" + urlObj.host;\n            } else {\n                input = \"https://\" + urlObj.host;\n            }\n        } else {\n            input = urlObj.protocol + \"//\" + urlObj.host;\n        }\n        return input;\n        // eslint-disable-next-line no-empty\n    } catch (err) {}\n    if (input.startsWith(\"/\")) {\n        throw new Error(\"Please provide a valid domain name\");\n    }\n    // not a valid URL\n    if (input.indexOf(\".\") === 0) {\n        input = input.substr(1);\n    }\n    // If the input contains a . it means they have given a domain name.\n    // So we try assuming that they have given a domain name\n    if (\n        (input.indexOf(\".\") !== -1 || input.startsWith(\"localhost\")) &&\n        !input.startsWith(\"http://\") &&\n        !input.startsWith(\"https://\")\n    ) {\n        input = \"https://\" + input;\n        // at this point, it should be a valid URL. So we test that before doing a recursive call\n        try {\n            new URL(input);\n            return normaliseURLDomainOrThrowError(input, true);\n            // eslint-disable-next-line no-empty\n        } catch (err) {}\n    }\n    throw new Error(\"Please provide a valid domain name\");\n}\n"]},"metadata":{},"sourceType":"script"}