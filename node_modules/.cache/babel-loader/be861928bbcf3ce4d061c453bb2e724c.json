{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar sessionAuth = require(\"./session-shared.js\");\n\nvar session$1 = require(\"supertokens-web-js/recipe/session\");\n\nvar session = require(\"./session-shared2.js\");\n\nrequire(\"react/jsx-runtime\");\n\nrequire(\"react\");\n\nrequire(\"supertokens-web-js/utils/cookieHandler\");\n\nrequire(\"supertokens-web-js/utils/postSuperTokensInitCallbacks\");\n\nrequire(\"supertokens-web-js/utils/windowHandler\");\n\nrequire(\"supertokens-web-js/utils/normalisedURLPath\");\n\nrequire(\"supertokens-web-js/utils/normalisedURLDomain\");\n\nrequire(\"supertokens-web-js/recipe/session/recipe\");\n\nexports.SessionContext = sessionAuth.SessionContext;\nObject.defineProperty(exports, \"BooleanClaim\", {\n  enumerable: true,\n  get: function () {\n    return session$1.BooleanClaim;\n  }\n});\nObject.defineProperty(exports, \"PrimitiveArrayClaim\", {\n  enumerable: true,\n  get: function () {\n    return session$1.PrimitiveArrayClaim;\n  }\n});\nObject.defineProperty(exports, \"PrimitiveClaim\", {\n  enumerable: true,\n  get: function () {\n    return session$1.PrimitiveClaim;\n  }\n});\nObject.defineProperty(exports, \"SessionClaimValidator\", {\n  enumerable: true,\n  get: function () {\n    return session$1.SessionClaimValidator;\n  }\n});\nexports.SessionAuth = session.SessionAuth;\nexports.addAxiosInterceptors = session.addAxiosInterceptors;\nexports.attemptRefreshingSession = session.attemptRefreshingSession;\nexports.default = session.SessionAPIWrapper;\nexports.doesSessionExist = session.doesSessionExist;\nexports.getAccessToken = session.getAccessToken;\nexports.getAccessTokenPayloadSecurely = session.getAccessTokenPayloadSecurely;\nexports.getClaimValue = session.getClaimValue;\nexports.getInvalidClaimsFromResponse = session.getInvalidClaimsFromResponse;\nexports.getUserId = session.getUserId;\nexports.init = session.init;\nexports.signOut = session.signOut;\nexports.useClaimValue = session.useClaimValue;\nexports.useSessionContext = session.useSessionContext$1;\nexports.validateClaims = session.validateClaims;","map":{"version":3,"mappings":"","names":[],"sources":[],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar sessionAuth = require(\"./session-shared.js\");\nvar session$1 = require(\"supertokens-web-js/recipe/session\");\nvar session = require(\"./session-shared2.js\");\nrequire(\"react/jsx-runtime\");\nrequire(\"react\");\nrequire(\"supertokens-web-js/utils/cookieHandler\");\nrequire(\"supertokens-web-js/utils/postSuperTokensInitCallbacks\");\nrequire(\"supertokens-web-js/utils/windowHandler\");\nrequire(\"supertokens-web-js/utils/normalisedURLPath\");\nrequire(\"supertokens-web-js/utils/normalisedURLDomain\");\nrequire(\"supertokens-web-js/recipe/session/recipe\");\n\nexports.SessionContext = sessionAuth.SessionContext;\nObject.defineProperty(exports, \"BooleanClaim\", {\n    enumerable: true,\n    get: function () {\n        return session$1.BooleanClaim;\n    },\n});\nObject.defineProperty(exports, \"PrimitiveArrayClaim\", {\n    enumerable: true,\n    get: function () {\n        return session$1.PrimitiveArrayClaim;\n    },\n});\nObject.defineProperty(exports, \"PrimitiveClaim\", {\n    enumerable: true,\n    get: function () {\n        return session$1.PrimitiveClaim;\n    },\n});\nObject.defineProperty(exports, \"SessionClaimValidator\", {\n    enumerable: true,\n    get: function () {\n        return session$1.SessionClaimValidator;\n    },\n});\nexports.SessionAuth = session.SessionAuth;\nexports.addAxiosInterceptors = session.addAxiosInterceptors;\nexports.attemptRefreshingSession = session.attemptRefreshingSession;\nexports.default = session.SessionAPIWrapper;\nexports.doesSessionExist = session.doesSessionExist;\nexports.getAccessToken = session.getAccessToken;\nexports.getAccessTokenPayloadSecurely = session.getAccessTokenPayloadSecurely;\nexports.getClaimValue = session.getClaimValue;\nexports.getInvalidClaimsFromResponse = session.getInvalidClaimsFromResponse;\nexports.getUserId = session.getUserId;\nexports.init = session.init;\nexports.signOut = session.signOut;\nexports.useClaimValue = session.useClaimValue;\nexports.useSessionContext = session.useSessionContext$1;\nexports.validateClaims = session.validateClaims;\n"]},"metadata":{},"sourceType":"script"}