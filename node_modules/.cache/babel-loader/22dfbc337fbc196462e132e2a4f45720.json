{"ast":null,"code":"var _jsxFileName = \"/home/dom/Videos/FlyM/src/pages/BrowsePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport fetch from \"node-fetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BrowsePage = () => {\n  _s();\n\n  const [flights, setFlights] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://api.openflights.org/data/airlines.json\");\n      const data = await response.json();\n      setFlights(data);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Flights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), flights.map(flight => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: flight.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, flight.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BrowsePage, \"YkaBEB7rvMCgao95TwXfNB7bv6I=\");\n\n_c = BrowsePage;\nexport default BrowsePage; // import React from 'react';\n// import Flight from \"../components/Flight\";\n// import \"./BrowsePage.css\"\n// import { Link } from \"react-router-dom\";\n// const BrowsePage = () => {\n//   const flights = [\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//   ];\n//   return (\n//     <>\n//     <h2 className=\"half-underline\" style={{color: '#00171F'}}>Available flights for your route </h2>\n//     <Link  to=\"/\" className=\"fiig\">Go back</Link>\n//     <Link  to=\"/page\" className=\"iig\">Track Your Flights</Link> \n//      <div className=\"flight-list\">\n//       {flights.map((flight, index) => (\n//         <Flight key={index} {...flight} />\n//       ))}\n//     </div>\n//     </>\n//   );\n// };\n// export default BrowsePage;\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { useEffect, useState } from \"react\";\n// // import React from \"react\";\n// // import FlightCard from \"../components/FlightCard\";\n// // import Header from \"../components/Header\";\n// // import FlightTable from \"../components/FlightTable\";\n// // import Sidebar from \"../Layout/Sidebar\";\n// // import Grid from \"@mui/material/Grid\";\n// // import { styled } from \"@mui/material/styles\";\n// // import Paper from \"@mui/material/Paper\";\n// // import Box from \"@mui/material/Box\";\n// // import \"./BrowsePage.scss\";\n// // import {\n// //   clearFlights,\n// //   filterFlights,\n// // } from \"../store/actions/searchFlightActions\";\n// // import NotFound from \"../Layout/NotFound\";\n// // const BrowsePage = () => {\n// //   const dispatch = useDispatch();\n// //   const [isStopsChecked, setIsStopsChecked] = useState([false, false]);\n// //   const [isAirlineChecked, setIsAirlineChecked] = useState([\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //   ]);\n// //   /**\n// //    * Theme for the grid\n// //    * @params theme\n// //    * @returns void\n// //    */\n// //   const Item = styled(Paper)(({ theme }) => ({\n// //     backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n// //     ...theme.typography.body2,\n// //     padding: theme.spacing(1),\n// //     textAlign: \"center\",\n// //     color: theme.palette.text.secondary,\n// //   }));\n// //   const sendStopsSelectionData = ([index1, index2]) => {\n// //     setIsStopsChecked([index1, index2]);\n// //   };\n// //   const sendAirlineSelectionData = ([\n// //     index1,\n// //     index2,\n// //     index3,\n// //     index4,\n// //     index5,\n// //   ]) => {\n// //     setIsAirlineChecked([index1, index2, index3, index4, index5]);\n// //   };\n// //   const flightData = useSelector((state) => state.flights.flights);\n// //   const filteredFlightData = useSelector(\n// //     (state) => state.flights.filteredFlights\n// //   );\n// //   const lastAction = useSelector((state) => state.flights.lastAction);\n// //   const isFlightDataLoading = useSelector(\n// //     (state) => state.flights.isFlightDataLoading\n// //   );\n// //   useEffect(() => {\n// //     if (isStopsChecked[0]) {\n// //       dispatch(filterFlights({ filterParams: \"Non Stop\", flightData }));\n// //     } else if (isStopsChecked[1]) {\n// //       dispatch(filterFlights({ filterParams: \"1 Stop\", flightData }));\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [isStopsChecked[0], isStopsChecked[1]]);\n// //   useEffect(() => {\n// //     let modifiedFlightData = filteredFlightData\n// //       ? filteredFlightData\n// //       : flightData;\n// //     if (isAirlineChecked[0]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Air Asia\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[1]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Go First\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[2]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Indigo\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[3]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Spicejet\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[4]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Vistara\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [\n// //     isAirlineChecked[0],\n// //     isAirlineChecked[1],\n// //     isAirlineChecked[2],\n// //     isAirlineChecked[3],\n// //     isAirlineChecked[4],\n// //   ]);\n// //   return (\n// //     <React.Fragment>\n// //       <Header />\n// //       <Box sx={{ flexGrow: 1 }} style={{ padding: \"5px\" }}>\n// //         <Grid container spacing={2}>\n// //           <Grid item xs={4} md={3} sm={4} className=\"filters\">\n// //             <Sidebar\n// //               sendStopsSelectionData={sendStopsSelectionData}\n// //               sendAirlineSelectionData={sendAirlineSelectionData}\n// //             />\n// //           </Grid>\n// //           <Grid item xs={8} md={9} sm={8} className=\"table-grid\">\n// //             <Item>\n// //               {isFlightDataLoading && <p>Loading</p>}\n// //               {flightData.length > 0 && (\n// //                 <React.Fragment>\n// //                   {! (!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\") &&  filteredFlightData.length !== 0 &&\n// //                   <FlightTable />}\n// //                   {!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\"\n// //                     ? flightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })\n// //                     :( filteredFlightData.length === 0)? \n// //                      <NotFound message=\"Sorry for the inconvenience. We could not find any flights!\"/>\n// //                     : filteredFlightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })}\n// //                 </React.Fragment>\n// //               )}\n// //             </Item>\n// //           </Grid>\n// //         </Grid>\n// //       </Box>\n// //     </React.Fragment>\n// //   );\n// // };\n// // export default BrowsePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowsePage\");","map":{"version":3,"sources":["/home/dom/Videos/FlyM/src/pages/BrowsePage.js"],"names":["React","useState","useEffect","fetch","BrowsePage","flights","setFlights","fetchData","response","data","json","map","flight","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,YAAlB;;;AAEA,MAAMC,UAAU,GAAE,MAAM;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAC1B,gDAD0B,CAA5B;AAGA,YAAMM,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACAJ,MAAAA,UAAU,CAACG,IAAD,CAAV;AACD,KAND;;AAOAF,IAAAA,SAAS;AACV,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,OAAO,CAACM,GAAR,CAAaC,MAAD,iBACX;AAAA,8BACE;AAAA,kBAAIA,MAAM,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUD,MAAM,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzBD;;GAAMV,U;;KAAAA,U;AA2BN,eAAeA,UAAfsourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetch from \"node-fetch\";\n\nconst BrowsePage= () => {\n  const [flights, setFlights] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://api.openflights.org/data/airlines.json\"\n      );\n      const data = await response.json();\n      setFlights(data);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h2>Flights</h2>\n      {flights.map((flight) => (\n        <div key={flight.id}>\n          <p>{flight.name}</p>\n          <button>Book</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BrowsePage;\n\n// import React from 'react';\n// import Flight from \"../components/Flight\";\n// import \"./BrowsePage.css\"\n// import { Link } from \"react-router-dom\";\n\n// const BrowsePage = () => {\n//   const flights = [\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"10:00 AM\", boardingLocation: 'JKIA', departureGateNumber: \"10\", price: \"$200\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"2:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"16\", price: \"$250\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"5:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"1\", price: \"$150\" },\n//     { airline: \"Ethiopian Airlines\", departureTime: \"8:00 PM\", boardingLocation: 'JKIA', departureGateNumber: \"14\", price: \"$100\" },\n//   ];\n\n//   return (\n//     <>\n  \n//     <h2 className=\"half-underline\" style={{color: '#00171F'}}>Available flights for your route </h2>\n//     <Link  to=\"/\" className=\"fiig\">Go back</Link>\n//     <Link  to=\"/page\" className=\"iig\">Track Your Flights</Link> \n//      <div className=\"flight-list\">\n//       {flights.map((flight, index) => (\n//         <Flight key={index} {...flight} />\n//       ))}\n//     </div>\n    \n//     </>\n   \n//   );\n// };\n\n\n\n// export default BrowsePage;\n\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { useEffect, useState } from \"react\";\n// // import React from \"react\";\n// // import FlightCard from \"../components/FlightCard\";\n// // import Header from \"../components/Header\";\n// // import FlightTable from \"../components/FlightTable\";\n// // import Sidebar from \"../Layout/Sidebar\";\n\n// // import Grid from \"@mui/material/Grid\";\n// // import { styled } from \"@mui/material/styles\";\n// // import Paper from \"@mui/material/Paper\";\n// // import Box from \"@mui/material/Box\";\n\n// // import \"./BrowsePage.scss\";\n// // import {\n// //   clearFlights,\n// //   filterFlights,\n// // } from \"../store/actions/searchFlightActions\";\n// // import NotFound from \"../Layout/NotFound\";\n\n// // const BrowsePage = () => {\n// //   const dispatch = useDispatch();\n\n// //   const [isStopsChecked, setIsStopsChecked] = useState([false, false]);\n// //   const [isAirlineChecked, setIsAirlineChecked] = useState([\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //     false,\n// //   ]);\n\n// //   /**\n// //    * Theme for the grid\n// //    * @params theme\n// //    * @returns void\n// //    */\n// //   const Item = styled(Paper)(({ theme }) => ({\n// //     backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n// //     ...theme.typography.body2,\n// //     padding: theme.spacing(1),\n// //     textAlign: \"center\",\n// //     color: theme.palette.text.secondary,\n// //   }));\n\n// //   const sendStopsSelectionData = ([index1, index2]) => {\n// //     setIsStopsChecked([index1, index2]);\n// //   };\n\n// //   const sendAirlineSelectionData = ([\n// //     index1,\n// //     index2,\n// //     index3,\n// //     index4,\n// //     index5,\n// //   ]) => {\n// //     setIsAirlineChecked([index1, index2, index3, index4, index5]);\n// //   };\n\n// //   const flightData = useSelector((state) => state.flights.flights);\n// //   const filteredFlightData = useSelector(\n// //     (state) => state.flights.filteredFlights\n// //   );\n// //   const lastAction = useSelector((state) => state.flights.lastAction);\n// //   const isFlightDataLoading = useSelector(\n// //     (state) => state.flights.isFlightDataLoading\n// //   );\n\n// //   useEffect(() => {\n// //     if (isStopsChecked[0]) {\n// //       dispatch(filterFlights({ filterParams: \"Non Stop\", flightData }));\n// //     } else if (isStopsChecked[1]) {\n// //       dispatch(filterFlights({ filterParams: \"1 Stop\", flightData }));\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [isStopsChecked[0], isStopsChecked[1]]);\n\n// //   useEffect(() => {\n// //     let modifiedFlightData = filteredFlightData\n// //       ? filteredFlightData\n// //       : flightData;\n// //     if (isAirlineChecked[0]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Air Asia\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[1]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Go First\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[2]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Indigo\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[3]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Spicejet\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else if (isAirlineChecked[4]) {\n// //       dispatch(\n// //         filterFlights({\n// //           filterParams: \"Vistara\",\n// //           flightData: modifiedFlightData,\n// //         })\n// //       );\n// //     } else {\n// //       dispatch(clearFlights(flightData));\n// //     }\n// //   }, [\n// //     isAirlineChecked[0],\n// //     isAirlineChecked[1],\n// //     isAirlineChecked[2],\n// //     isAirlineChecked[3],\n// //     isAirlineChecked[4],\n// //   ]);\n\n// //   return (\n// //     <React.Fragment>\n// //       <Header />\n// //       <Box sx={{ flexGrow: 1 }} style={{ padding: \"5px\" }}>\n// //         <Grid container spacing={2}>\n// //           <Grid item xs={4} md={3} sm={4} className=\"filters\">\n// //             <Sidebar\n// //               sendStopsSelectionData={sendStopsSelectionData}\n// //               sendAirlineSelectionData={sendAirlineSelectionData}\n// //             />\n// //           </Grid>\n// //           <Grid item xs={8} md={9} sm={8} className=\"table-grid\">\n// //             <Item>\n// //               {isFlightDataLoading && <p>Loading</p>}\n// //               {flightData.length > 0 && (\n// //                 <React.Fragment>\n// //                   {! (!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\") &&  filteredFlightData.length !== 0 &&\n// //                   <FlightTable />}\n// //                   {!filteredFlightData?.length > 0 &&\n// //                   lastAction !== \"Filter Flights\"\n// //                     ? flightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })\n// //                     :( filteredFlightData.length === 0)? \n// //                      <NotFound message=\"Sorry for the inconvenience. We could not find any flights!\"/>\n// //                     : filteredFlightData.map((flight) => {\n// //                         return (\n// //                           <FlightCard\n// //                             key={flight._id}\n// //                             id={flight._id}\n// //                             flightConfiguration={flight}\n// //                           />\n// //                         );\n// //                       })}\n// //                 </React.Fragment>\n// //               )}\n// //             </Item>\n// //           </Grid>\n// //         </Grid>\n// //       </Box>\n// //     </React.Fragment>\n// //   );\n// // };\n// // export default BrowsePage;\n\n\n"]},"metadata":{},"sourceType":"module"}