{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar sessionAuth = require(\"./session-shared.js\");\n\nvar recipe = require(\"./emailpassword-shared2.js\");\n\nrequire(\"react/jsx-runtime\");\n\nrequire(\"react\");\n\nrequire(\"supertokens-web-js/utils/cookieHandler\");\n\nrequire(\"supertokens-web-js/utils/postSuperTokensInitCallbacks\");\n\nrequire(\"supertokens-web-js/utils/windowHandler\");\n\nrequire(\"supertokens-web-js/utils/normalisedURLPath\");\n\nrequire(\"supertokens-web-js/utils/normalisedURLDomain\");\n\nrequire(\"supertokens-web-js/recipe/session/recipe\");\n\nrequire(\"./translations.js\");\n\nrequire(\"./translationContext.js\");\n\nrequire(\"react-dom\");\n\nrequire(\"./authRecipe-shared.js\");\n\nrequire(\"./session-shared2.js\");\n\nrequire(\"supertokens-web-js/recipe/session\");\n\nrequire(\"./emailverification-shared.js\");\n\nrequire(\"./index.js\");\n\nrequire(\"./emailpassword-shared3.js\");\n\nrequire(\"supertokens-web-js/utils/error\");\n\nrequire(\"./emailpassword-shared.js\");\n\nrequire(\"supertokens-web-js/recipe/emailpassword/recipeImplementation\");\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n\nvar Wrapper =\n/** @class */\nfunction () {\n  function Wrapper() {}\n\n  Wrapper.init = function (config) {\n    return recipe.EmailPassword.init(config);\n  };\n\n  Wrapper.signOut = function (input) {\n    return sessionAuth.__awaiter(this, void 0, void 0, function () {\n      return sessionAuth.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , recipe.EmailPassword.getInstanceOrThrow().signOut({\n          userContext: sessionAuth.getNormalisedUserContext(input === null || input === void 0 ? void 0 : input.userContext)\n        })];\n      });\n    });\n  };\n\n  Wrapper.submitNewPassword = function (input) {\n    return sessionAuth.__awaiter(this, void 0, void 0, function () {\n      return sessionAuth.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , recipe.EmailPassword.getInstanceOrThrow().recipeImpl.submitNewPassword(sessionAuth.__assign(sessionAuth.__assign({}, input), {\n          userContext: sessionAuth.getNormalisedUserContext(input.userContext)\n        }))];\n      });\n    });\n  };\n\n  Wrapper.sendPasswordResetEmail = function (input) {\n    return sessionAuth.__awaiter(this, void 0, void 0, function () {\n      return sessionAuth.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , recipe.EmailPassword.getInstanceOrThrow().recipeImpl.sendPasswordResetEmail(sessionAuth.__assign(sessionAuth.__assign({}, input), {\n          userContext: sessionAuth.getNormalisedUserContext(input.userContext)\n        }))];\n      });\n    });\n  };\n\n  Wrapper.signUp = function (input) {\n    return sessionAuth.__awaiter(this, void 0, void 0, function () {\n      return sessionAuth.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , recipe.EmailPassword.getInstanceOrThrow().recipeImpl.signUp(sessionAuth.__assign(sessionAuth.__assign({}, input), {\n          userContext: sessionAuth.getNormalisedUserContext(input.userContext)\n        }))];\n      });\n    });\n  };\n\n  Wrapper.signIn = function (input) {\n    return sessionAuth.__awaiter(this, void 0, void 0, function () {\n      return sessionAuth.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , recipe.EmailPassword.getInstanceOrThrow().recipeImpl.signIn(sessionAuth.__assign(sessionAuth.__assign({}, input), {\n          userContext: sessionAuth.getNormalisedUserContext(input.userContext)\n        }))];\n      });\n    });\n  };\n\n  Wrapper.doesEmailExist = function (input) {\n    return sessionAuth.__awaiter(this, void 0, void 0, function () {\n      return sessionAuth.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , recipe.EmailPassword.getInstanceOrThrow().recipeImpl.doesEmailExist(sessionAuth.__assign(sessionAuth.__assign({}, input), {\n          userContext: sessionAuth.getNormalisedUserContext(input.userContext)\n        }))];\n      });\n    });\n  };\n\n  Wrapper.getResetPasswordTokenFromURL = function (input) {\n    return recipe.EmailPassword.getInstanceOrThrow().recipeImpl.getResetPasswordTokenFromURL(sessionAuth.__assign(sessionAuth.__assign({}, input), {\n      userContext: sessionAuth.getNormalisedUserContext(input === null || input === void 0 ? void 0 : input.userContext)\n    }));\n  };\n\n  Wrapper.SignInAndUp = function (prop) {\n    if (prop === void 0) {\n      prop = {};\n    }\n\n    return recipe.EmailPassword.getInstanceOrThrow().getFeatureComponent(\"signinup\", prop);\n  };\n\n  Wrapper.SignInAndUpTheme = recipe.SignInAndUpThemeWrapper;\n\n  Wrapper.ResetPasswordUsingToken = function (prop) {\n    return recipe.EmailPassword.getInstanceOrThrow().getFeatureComponent(\"resetpassword\", prop);\n  };\n\n  Wrapper.ResetPasswordUsingTokenTheme = recipe.ResetPasswordUsingTokenThemeWrapper;\n  Wrapper.ComponentsOverrideProvider = recipe.Provider;\n  return Wrapper;\n}();\n\nvar init = Wrapper.init;\nvar signOut = Wrapper.signOut;\nvar submitNewPassword = Wrapper.submitNewPassword;\nvar sendPasswordResetEmail = Wrapper.sendPasswordResetEmail;\nvar signUp = Wrapper.signUp;\nvar signIn = Wrapper.signIn;\nvar doesEmailExist = Wrapper.doesEmailExist;\nvar SignInAndUp = Wrapper.SignInAndUp;\nvar getResetPasswordTokenFromURL = Wrapper.getResetPasswordTokenFromURL;\nvar ResetPasswordUsingToken = Wrapper.ResetPasswordUsingToken;\nvar EmailPasswordComponentsOverrideProvider = Wrapper.ComponentsOverrideProvider;\nexports.ResetPasswordUsingTokenTheme = recipe.ResetPasswordUsingTokenThemeWrapper;\nexports.SignInAndUpTheme = recipe.SignInAndUpThemeWrapper;\nexports.EmailPasswordComponentsOverrideProvider = EmailPasswordComponentsOverrideProvider;\nexports.ResetPasswordUsingToken = ResetPasswordUsingToken;\nexports.SignInAndUp = SignInAndUp;\nexports.default = Wrapper;\nexports.doesEmailExist = doesEmailExist;\nexports.getResetPasswordTokenFromURL = getResetPasswordTokenFromURL;\nexports.init = init;\nexports.sendPasswordResetEmail = sendPasswordResetEmail;\nexports.signIn = signIn;\nexports.signOut = signOut;\nexports.signUp = signUp;\nexports.submitNewPassword = submitNewPassword;","map":{"version":3,"mappings":"","names":[],"sources":[],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar sessionAuth = require(\"./session-shared.js\");\nvar recipe = require(\"./emailpassword-shared2.js\");\nrequire(\"react/jsx-runtime\");\nrequire(\"react\");\nrequire(\"supertokens-web-js/utils/cookieHandler\");\nrequire(\"supertokens-web-js/utils/postSuperTokensInitCallbacks\");\nrequire(\"supertokens-web-js/utils/windowHandler\");\nrequire(\"supertokens-web-js/utils/normalisedURLPath\");\nrequire(\"supertokens-web-js/utils/normalisedURLDomain\");\nrequire(\"supertokens-web-js/recipe/session/recipe\");\nrequire(\"./translations.js\");\nrequire(\"./translationContext.js\");\nrequire(\"react-dom\");\nrequire(\"./authRecipe-shared.js\");\nrequire(\"./session-shared2.js\");\nrequire(\"supertokens-web-js/recipe/session\");\nrequire(\"./emailverification-shared.js\");\nrequire(\"./index.js\");\nrequire(\"./emailpassword-shared3.js\");\nrequire(\"supertokens-web-js/utils/error\");\nrequire(\"./emailpassword-shared.js\");\nrequire(\"supertokens-web-js/recipe/emailpassword/recipeImplementation\");\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar Wrapper = /** @class */ (function () {\n    function Wrapper() {}\n    Wrapper.init = function (config) {\n        return recipe.EmailPassword.init(config);\n    };\n    Wrapper.signOut = function (input) {\n        return sessionAuth.__awaiter(this, void 0, void 0, function () {\n            return sessionAuth.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().signOut({\n                        userContext: sessionAuth.getNormalisedUserContext(\n                            input === null || input === void 0 ? void 0 : input.userContext\n                        ),\n                    }),\n                ];\n            });\n        });\n    };\n    Wrapper.submitNewPassword = function (input) {\n        return sessionAuth.__awaiter(this, void 0, void 0, function () {\n            return sessionAuth.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().recipeImpl.submitNewPassword(\n                        sessionAuth.__assign(sessionAuth.__assign({}, input), {\n                            userContext: sessionAuth.getNormalisedUserContext(input.userContext),\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    Wrapper.sendPasswordResetEmail = function (input) {\n        return sessionAuth.__awaiter(this, void 0, void 0, function () {\n            return sessionAuth.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().recipeImpl.sendPasswordResetEmail(\n                        sessionAuth.__assign(sessionAuth.__assign({}, input), {\n                            userContext: sessionAuth.getNormalisedUserContext(input.userContext),\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    Wrapper.signUp = function (input) {\n        return sessionAuth.__awaiter(this, void 0, void 0, function () {\n            return sessionAuth.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().recipeImpl.signUp(\n                        sessionAuth.__assign(sessionAuth.__assign({}, input), {\n                            userContext: sessionAuth.getNormalisedUserContext(input.userContext),\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    Wrapper.signIn = function (input) {\n        return sessionAuth.__awaiter(this, void 0, void 0, function () {\n            return sessionAuth.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().recipeImpl.signIn(\n                        sessionAuth.__assign(sessionAuth.__assign({}, input), {\n                            userContext: sessionAuth.getNormalisedUserContext(input.userContext),\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    Wrapper.doesEmailExist = function (input) {\n        return sessionAuth.__awaiter(this, void 0, void 0, function () {\n            return sessionAuth.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().recipeImpl.doesEmailExist(\n                        sessionAuth.__assign(sessionAuth.__assign({}, input), {\n                            userContext: sessionAuth.getNormalisedUserContext(input.userContext),\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    Wrapper.getResetPasswordTokenFromURL = function (input) {\n        return recipe.EmailPassword.getInstanceOrThrow().recipeImpl.getResetPasswordTokenFromURL(\n            sessionAuth.__assign(sessionAuth.__assign({}, input), {\n                userContext: sessionAuth.getNormalisedUserContext(\n                    input === null || input === void 0 ? void 0 : input.userContext\n                ),\n            })\n        );\n    };\n    Wrapper.SignInAndUp = function (prop) {\n        if (prop === void 0) {\n            prop = {};\n        }\n        return recipe.EmailPassword.getInstanceOrThrow().getFeatureComponent(\"signinup\", prop);\n    };\n    Wrapper.SignInAndUpTheme = recipe.SignInAndUpThemeWrapper;\n    Wrapper.ResetPasswordUsingToken = function (prop) {\n        return recipe.EmailPassword.getInstanceOrThrow().getFeatureComponent(\"resetpassword\", prop);\n    };\n    Wrapper.ResetPasswordUsingTokenTheme = recipe.ResetPasswordUsingTokenThemeWrapper;\n    Wrapper.ComponentsOverrideProvider = recipe.Provider;\n    return Wrapper;\n})();\nvar init = Wrapper.init;\nvar signOut = Wrapper.signOut;\nvar submitNewPassword = Wrapper.submitNewPassword;\nvar sendPasswordResetEmail = Wrapper.sendPasswordResetEmail;\nvar signUp = Wrapper.signUp;\nvar signIn = Wrapper.signIn;\nvar doesEmailExist = Wrapper.doesEmailExist;\nvar SignInAndUp = Wrapper.SignInAndUp;\nvar getResetPasswordTokenFromURL = Wrapper.getResetPasswordTokenFromURL;\nvar ResetPasswordUsingToken = Wrapper.ResetPasswordUsingToken;\nvar EmailPasswordComponentsOverrideProvider = Wrapper.ComponentsOverrideProvider;\n\nexports.ResetPasswordUsingTokenTheme = recipe.ResetPasswordUsingTokenThemeWrapper;\nexports.SignInAndUpTheme = recipe.SignInAndUpThemeWrapper;\nexports.EmailPasswordComponentsOverrideProvider = EmailPasswordComponentsOverrideProvider;\nexports.ResetPasswordUsingToken = ResetPasswordUsingToken;\nexports.SignInAndUp = SignInAndUp;\nexports.default = Wrapper;\nexports.doesEmailExist = doesEmailExist;\nexports.getResetPasswordTokenFromURL = getResetPasswordTokenFromURL;\nexports.init = init;\nexports.sendPasswordResetEmail = sendPasswordResetEmail;\nexports.signIn = signIn;\nexports.signOut = signOut;\nexports.signUp = signUp;\nexports.submitNewPassword = submitNewPassword;\n"]},"metadata":{},"sourceType":"script"}