{"ast":null,"code":"\"use strict\";\n\nvar sessionAuth = require(\"./session-shared.js\");\n\nvar jsxRuntime = require(\"react/jsx-runtime\");\n\nvar React = require(\"react\");\n\nvar STGeneralError = require(\"supertokens-web-js/utils/error\");\n\nvar button = require(\"./emailpassword-shared.js\");\n\nrequire(\"./index.js\");\n\nvar translationContext = require(\"./translationContext.js\");\n\nfunction _interopDefault(e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n}\n\nvar STGeneralError__default = /*#__PURE__*/_interopDefault(STGeneralError);\n/*\n * Component.\n */\n\n\nfunction FormRow(_a) {\n  var children = _a.children,\n      hasError = _a.hasError;\n  return jsxRuntime.jsx(\"div\", sessionAuth.__assign({\n    \"data-supertokens\": [\"formRow\", hasError ? \"hasError\" : \"\"].join(\" \")\n  }, {\n    children: children\n  }));\n}\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n * Imports.\n */\n\n/*\n * Component.\n */\n\n\nfunction CheckedIcon() {\n  return jsxRuntime.jsx(\"svg\", sessionAuth.__assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"14.862\",\n    height: \"12.033\",\n    viewBox: \"0 0 14.862 12.033\",\n    \"data-supertokens\": \"checkedIcon\"\n  }, {\n    children: jsxRuntime.jsx(\"path\", {\n      fill: \"rgb(var(--palette-primary))\",\n      d: \"M12.629 49L5.06 56.572l-2.829-2.829L0 55.977l5.057 5.057.654-.651 9.152-9.152z\",\n      transform: \"translate(0 -49)\"\n    })\n  }));\n}\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n * Imports.\n */\n\n/*\n * Component.\n */\n\n\nfunction ErrorIcon() {\n  return jsxRuntime.jsx(\"svg\", sessionAuth.__assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"17\",\n    height: \"15\",\n    viewBox: \"0 0 17 15\",\n    \"data-supertokens\": \"errorIcon\"\n  }, {\n    children: jsxRuntime.jsxs(\"g\", {\n      children: [jsxRuntime.jsx(\"g\", sessionAuth.__assign({\n        className: \"Asdf\",\n        fill: \"rgb(var(--palette-error))\"\n      }, {\n        children: jsxRuntime.jsx(\"path\", {\n          d: \"M13.568 14.75H3.432c-.63 0-1.195-.325-1.512-.869-.317-.544-.32-1.196-.01-1.744l5.067-8.943c.315-.556.884-.887 1.523-.887.639 0 1.208.331 1.523.887l5.067 8.943c.31.548.307 1.2-.01 1.744s-.882.869-1.512.869z\",\n          transform: \"translate(-824.894 -352.829) translate(824.894 352.829)\"\n        })\n      })), jsxRuntime.jsx(\"text\", sessionAuth.__assign({\n        fill: \"#fff\",\n        fontSize: \"10px\",\n        fontWeight: \"700\",\n        transform: \"translate(-824.894 -352.829) translate(832.014 365.198)\"\n      }, {\n        children: jsxRuntime.jsx(\"tspan\", sessionAuth.__assign({\n          x: \"0\",\n          y: \"0\"\n        }, {\n          children: \"!\"\n        }))\n      }))]\n    })\n  }));\n}\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n * Imports.\n */\n\n/*\n * Component.\n */\n\n\nfunction ShowPasswordIcon(_a) {\n  var showPassword = _a.showPassword;\n\n  if (showPassword === true) {\n    return jsxRuntime.jsx(\"div\", {\n      children: jsxRuntime.jsx(\"svg\", sessionAuth.__assign({\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"18.391\",\n        height: \"16.276\",\n        viewBox: \"0 0 18.391 16.276\",\n        \"data-supertokens\": \"showPasswordIcon show\"\n      }, {\n        children: jsxRuntime.jsxs(\"g\", {\n          children: [jsxRuntime.jsx(\"g\", {\n            children: jsxRuntime.jsx(\"g\", {\n              children: jsxRuntime.jsx(\"g\", {\n                children: jsxRuntime.jsx(\"path\", {\n                  fill: \"rgb(var(--palette-textPrimary))\",\n                  d: \"M29.289 100.33c-2.4-3.63-5.619-5.63-9.069-5.63s-6.67 2-9.069 5.63a.767.767 0 0 0 0 .845c2.4 3.63 5.619 5.63 9.069 5.63s6.67-2 9.069-5.63a.767.767 0 0 0 0-.845zm-9.069 4.944c-2.785 0-5.435-1.6-7.5-4.519 2.065-2.92 4.715-4.519 7.5-4.519s5.435 1.6 7.5 4.519c-2.064 2.92-4.711 4.519-7.5 4.519z\",\n                  transform: \"translate(-822 -420.048) translate(822 422.035) translate(-11.025 -94.7)\"\n                })\n              })\n            })\n          }), jsxRuntime.jsxs(\"g\", sessionAuth.__assign({\n            fill: \"rgb(var(--palette-textPrimary))\",\n            stroke: \"rgb(var(--palette-inputBackground))\",\n            transform: \"translate(-822 -420.048) translate(827.164 424.055)\"\n          }, {\n            children: [jsxRuntime.jsx(\"circle\", {\n              cx: \"4.036\",\n              cy: \"4.036\",\n              r: \"4.036\",\n              stroke: \"none\"\n            }), jsxRuntime.jsx(\"circle\", {\n              cx: \"4.036\",\n              cy: \"4.036\",\n              r: \"3.536\",\n              fill: \"none\"\n            })]\n          })), jsxRuntime.jsx(\"path\", {\n            fill: \"none\",\n            stroke: \"#707070\",\n            strokeLinecap: \"round\",\n            strokeWidth: \"2.25px\",\n            d: \"M11.981 0L0 11.981\",\n            transform: \"translate(-822 -420.048) translate(825.084 421.639)\"\n          }), jsxRuntime.jsx(\"path\", {\n            fill: \"none\",\n            stroke: \"rgb(var(--palette-inputBackground))\",\n            strokeLinecap: \"round\",\n            d: \"M13.978 0L0 13.978\",\n            transform: \"translate(-822 -420.048) translate(825.084 421.639)\"\n          })]\n        })\n      }))\n    });\n  }\n\n  return jsxRuntime.jsx(\"div\", {\n    children: jsxRuntime.jsx(\"svg\", sessionAuth.__assign({\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"18.281\",\n      height: \"12.033\",\n      viewBox: \"0 0 18.281 12.033\",\n      \"data-supertokens\": \"showPasswordIcon hide\"\n    }, {\n      children: jsxRuntime.jsxs(\"g\", {\n        children: [jsxRuntime.jsx(\"g\", {\n          children: jsxRuntime.jsx(\"g\", {\n            children: jsxRuntime.jsx(\"g\", {\n              children: jsxRuntime.jsx(\"path\", {\n                fill: \"rgb(var(--palette-textPrimary))\",\n                d: \"M29.18 100.3c-2.384-3.608-5.586-5.6-9.015-5.6s-6.63 1.989-9.015 5.6a.763.763 0 0 0 0 .84c2.384 3.608 5.586 5.6 9.015 5.6s6.63-1.989 9.015-5.6a.763.763 0 0 0 0-.84zm-9.015 4.914c-2.769 0-5.4-1.589-7.459-4.492 2.052-2.9 4.686-4.492 7.459-4.492s5.4 1.589 7.459 4.492c-2.056 2.899-4.686 4.489-7.458 4.489z\",\n                transform: \"translate(-822 -422.088) translate(822 422.088) translate(-11.025 -94.7)\"\n              })\n            })\n          })\n        }), jsxRuntime.jsxs(\"g\", sessionAuth.__assign({\n          fill: \"rgb(var(--palette-textPrimary))\",\n          stroke: \"rgb(var(--palette-inputBackground))\",\n          transform: \"translate(-822 -422.088) translate(827.133 424.096)\"\n        }, {\n          children: [jsxRuntime.jsx(\"circle\", {\n            cx: \"4.012\",\n            cy: \"4.012\",\n            r: \"4.012\",\n            stroke: \"none\"\n          }), jsxRuntime.jsx(\"circle\", {\n            cx: \"4.012\",\n            cy: \"4.012\",\n            r: \"3.512\",\n            fill: \"none\"\n          })]\n        }))]\n      })\n    }))\n  });\n}\n\nvar Input = function (_a) {\n  var type = _a.type,\n      name = _a.name,\n      hasError = _a.hasError,\n      autoComplete = _a.autoComplete,\n      onInputFocus = _a.onInputFocus,\n      onInputBlur = _a.onInputBlur,\n      onChange = _a.onChange,\n      value = _a.value,\n      placeholder = _a.placeholder,\n      validated = _a.validated,\n      autofocus = _a.autofocus;\n  var t = translationContext.useTranslation();\n\n  var _b = React.useState(false),\n      showPassword = _b[0],\n      setShowPassword = _b[1];\n  /*\n   * Method.\n   */\n\n\n  function handleFocus() {\n    if (onInputFocus !== undefined) {\n      onInputFocus({\n        id: name,\n        value: value\n      });\n    }\n  }\n\n  function handleBlur() {\n    if (onInputBlur !== undefined) {\n      onInputBlur({\n        id: name,\n        value: value\n      });\n    }\n  }\n\n  function handleChange(event) {\n    if (onChange) {\n      onChange({\n        id: name,\n        value: event.target.value\n      });\n    }\n  }\n\n  if (autoComplete === undefined) {\n    autoComplete = \"off\";\n  }\n\n  var inputType = type;\n\n  if (type === \"password\" && showPassword === true) {\n    inputType = \"text\";\n  }\n\n  return jsxRuntime.jsx(\"div\", sessionAuth.__assign({\n    \"data-supertokens\": \"inputContainer\"\n  }, {\n    children: jsxRuntime.jsxs(\"div\", sessionAuth.__assign({\n      \"data-supertokens\": [\"inputWrapper\", hasError ? \"inputError\" : \"\"].join(\" \")\n    }, {\n      children: [jsxRuntime.jsx(\"input\", {\n        autoFocus: autofocus,\n        autoComplete: autoComplete,\n        \"data-supertokens\": \"input\",\n        className: \"supertokens-input\",\n        onFocus: handleFocus,\n        onBlur: handleBlur,\n        type: inputType,\n        name: name,\n        placeholder: t(placeholder),\n        onChange: handleChange,\n        value: value\n      }), hasError === true && jsxRuntime.jsx(\"div\", sessionAuth.__assign({\n        \"data-supertokens\": \"inputAdornment inputAdornmentError\"\n      }, {\n        children: jsxRuntime.jsx(ErrorIcon, {})\n      })), validated === true && hasError === false && jsxRuntime.jsx(\"div\", sessionAuth.__assign({\n        \"data-supertokens\": \"inputAdornment inputAdornmentSuccess\"\n      }, {\n        children: jsxRuntime.jsx(CheckedIcon, {})\n      })), type === \"password\" && value.length > 0 && jsxRuntime.jsx(\"div\", sessionAuth.__assign({\n        onClick: function () {\n          return setShowPassword(showPassword === false);\n        },\n        \"data-supertokens\": \"inputAdornment showPassword\"\n      }, {\n        children: jsxRuntime.jsx(ShowPasswordIcon, {\n          showPassword: showPassword\n        })\n      }))]\n    }))\n  }));\n};\n\nfunction InputError(_a) {\n  var error = _a.error;\n  var t = translationContext.useTranslation();\n  return jsxRuntime.jsx(\"div\", sessionAuth.__assign({\n    \"data-supertokens\": \"inputErrorMessage\"\n  }, {\n    children: t(error)\n  }));\n}\n\nfunction Label(_a) {\n  var value = _a.value,\n      showIsRequired = _a.showIsRequired;\n  var t = translationContext.useTranslation();\n  return jsxRuntime.jsxs(\"div\", sessionAuth.__assign({\n    \"data-supertokens\": \"label\"\n  }, {\n    children: [t(value), showIsRequired && \" *\"]\n  }));\n}\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n * Imports.\n */\n\n/*\n * Component.\n */\n\n\nfunction ArrowLeftIcon(_a) {\n  var color = _a.color;\n  return jsxRuntime.jsx(\"svg\", sessionAuth.__assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"11.272\",\n    height: \"9.49\",\n    viewBox: \"0 0 11.272 9.49\",\n    \"data-supertokens\": \"arrowLeftIcon\"\n  }, {\n    children: jsxRuntime.jsx(\"path\", {\n      fill: color,\n      stroke: \"#fff\",\n      strokeWidth: \"0.75px\",\n      d: \"M9.931 5.2h.016-7.041L5.12 7.41a.581.581 0 0 1 0 .817l-.344.345a.576.576 0 0 1-.813 0L.168 4.778a.58.58 0 0 1 0-.816L3.962.168a.577.577 0 0 1 .813 0l.345.344a.57.57 0 0 1 .168.407.553.553 0 0 1-.168.4l-2.239 2.23h7.058a.6.6 0 0 1 .584.59v.487a.585.585 0 0 1-.592.574z\",\n      transform: \"translate(.375 .375)\"\n    })\n  }));\n}\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n\nvar MANDATORY_FORM_FIELDS_ID_ARRAY = [\"email\", \"password\"];\nvar DEFAULT_RESET_PASSWORD_PATH = \"/reset-password\";\n\nvar FormBase = function (props) {\n  var footer = props.footer,\n      buttonLabel = props.buttonLabel,\n      showLabels = props.showLabels,\n      validateOnBlur = props.validateOnBlur,\n      formFields = props.formFields;\n  var unmounting = React.useRef(new AbortController());\n  React.useEffect(function () {\n    // We need this because in some cases this gets called multiple times\n    unmounting.current = new AbortController();\n    return function () {\n      unmounting.current.abort();\n    };\n  }, [unmounting]);\n\n  var _a = React.useState(props.formFields.map(function (f) {\n    return {\n      id: f.id,\n      value: \"\"\n    };\n  })),\n      fieldStates = _a[0],\n      setFieldStates = _a[1];\n\n  var _b = React.useState(false),\n      isLoading = _b[0],\n      setIsLoading = _b[1];\n\n  var updateFieldState = React.useCallback(function (id, update) {\n    setFieldStates(function (os) {\n      var field = os.find(function (f) {\n        return f.id === id;\n      });\n\n      if (field === undefined) {\n        return sessionAuth.__spreadArray(sessionAuth.__spreadArray([], os, true), [update({\n          id: id,\n          value: \"\"\n        })], false);\n      }\n\n      return os.filter(function (f) {\n        return f !== field;\n      }).concat(update(field));\n    });\n  }, [setFieldStates]);\n  var onInputFocus = React.useCallback(function (field) {\n    updateFieldState(field.id, function (os) {\n      return sessionAuth.__assign(sessionAuth.__assign({}, os), {\n        validated: false\n      });\n    });\n  }, [updateFieldState]);\n  var onInputBlur = React.useCallback(function (field) {\n    return sessionAuth.__awaiter(void 0, void 0, void 0, function () {\n      var fieldConfig, error, _a;\n\n      return sessionAuth.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!validateOnBlur) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            fieldConfig = props.formFields.find(function (f) {\n              return f.id === field.id;\n            });\n            if (!(fieldConfig && field.value !== \"\")) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , fieldConfig.validate(field.value)];\n\n          case 1:\n            _a = _b.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _a = undefined;\n            _b.label = 3;\n\n          case 3:\n            error = _a;\n            updateFieldState(field.id, function (os) {\n              return sessionAuth.__assign(sessionAuth.__assign({}, os), {\n                error: error,\n                validated: error === undefined && field.value.length !== 0\n              });\n            });\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, [validateOnBlur, updateFieldState, props.formFields]);\n  var onInputChange = React.useCallback(function (field) {\n    updateFieldState(field.id, function (os) {\n      return sessionAuth.__assign(sessionAuth.__assign({}, os), {\n        value: field.value,\n        error: undefined\n      });\n    });\n    props.clearError();\n  }, [updateFieldState]);\n  var onFormSubmit = React.useCallback(function (e) {\n    return sessionAuth.__awaiter(void 0, void 0, void 0, function () {\n      var apiFields, fieldUpdates, result, generalError, e_1, _loop_1, _i, formFields_1, field, errorFields_1;\n\n      return sessionAuth.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Prevent default event propagation.\n            e.preventDefault(); // Set loading state.\n\n            setIsLoading(true);\n            setFieldStates(function (os) {\n              return os.map(function (fs) {\n                return sessionAuth.__assign(sessionAuth.__assign({}, fs), {\n                  error: undefined\n                });\n              });\n            });\n            apiFields = formFields.map(function (field) {\n              var fieldState = fieldStates.find(function (fs) {\n                return fs.id === field.id;\n              });\n              return {\n                id: field.id,\n                value: fieldState === undefined ? \"\" : fieldState.value\n              };\n            });\n            fieldUpdates = [];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 6, 7, 8]);\n\n            result = void 0;\n            generalError = void 0;\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , props.callAPI(apiFields, function (id, value) {\n              return fieldUpdates.push({\n                id: id,\n                value: value\n              });\n            })];\n\n          case 3:\n            result = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            e_1 = _a.sent();\n\n            if (STGeneralError__default.default.isThisError(e_1)) {\n              generalError = e_1;\n            } else {\n              throw e_1;\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 5:\n            if (unmounting.current.signal.aborted) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            _loop_1 = function (field) {\n              var update = fieldUpdates.find(function (f) {\n                return f.id === field.id;\n              });\n\n              if (update || field.clearOnSubmit === true) {\n                // We can do these one by one, it's almost never more than one field\n                updateFieldState(field.id, function (os) {\n                  return sessionAuth.__assign(sessionAuth.__assign({}, os), {\n                    value: update ? update.value : \"\"\n                  });\n                });\n              }\n            };\n\n            for (_i = 0, formFields_1 = formFields; _i < formFields_1.length; _i++) {\n              field = formFields_1[_i];\n\n              _loop_1(field);\n            }\n\n            if (generalError !== undefined) {\n              props.onError(generalError.message);\n            } else {\n              // If successful\n              if (result.status === \"OK\") {\n                setIsLoading(false);\n                props.clearError();\n\n                if (props.onSuccess !== undefined) {\n                  props.onSuccess(result);\n                }\n              }\n\n              if (unmounting.current.signal.aborted) {\n                return [2\n                /*return*/\n                ];\n              } // If field error.\n\n\n              if (result.status === \"FIELD_ERROR\") {\n                errorFields_1 = result.formFields;\n                setFieldStates(function (os) {\n                  return os.map(function (fs) {\n                    var _a;\n\n                    return sessionAuth.__assign(sessionAuth.__assign({}, fs), {\n                      error: (_a = errorFields_1.find(function (ef) {\n                        return ef.id === fs.id;\n                      })) === null || _a === void 0 ? void 0 : _a.error\n                    });\n                  });\n                });\n              }\n            }\n\n            return [3\n            /*break*/\n            , 8];\n\n          case 6:\n            _a.sent();\n\n            props.onError(\"SOMETHING_WENT_WRONG_ERROR\");\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            setIsLoading(false);\n            return [7\n            /*endfinally*/\n            ];\n\n          case 8:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, [setIsLoading, setFieldStates, props, formFields, fieldStates]);\n  return jsxRuntime.jsxs(\"form\", sessionAuth.__assign({\n    autoComplete: \"on\",\n    noValidate: true,\n    onSubmit: onFormSubmit\n  }, {\n    children: [formFields.map(function (field) {\n      var type = \"text\"; // If email or password, replace field type.\n\n      if (MANDATORY_FORM_FIELDS_ID_ARRAY.includes(field.id)) {\n        type = field.id;\n      }\n\n      if (field.id === \"confirm-password\") {\n        type = \"password\";\n      }\n\n      var fstate = fieldStates.find(function (s) {\n        return s.id === field.id;\n      }) || {\n        id: field.id,\n        validated: false,\n        error: undefined,\n        value: \"\"\n      };\n      return jsxRuntime.jsx(FormRow, sessionAuth.__assign({\n        hasError: fstate.error !== undefined\n      }, {\n        children: jsxRuntime.jsxs(React.Fragment, {\n          children: [showLabels && (field.labelComponent !== undefined ? field.labelComponent : jsxRuntime.jsx(Label, {\n            value: field.label,\n            showIsRequired: field.showIsRequired\n          })), field.inputComponent !== undefined ? jsxRuntime.jsx(field.inputComponent, {\n            type: type,\n            name: field.id,\n            validated: fstate.validated === true,\n            placeholder: field.placeholder,\n            value: fstate.value,\n            autoComplete: field.autoComplete,\n            autofocus: field.autofocus,\n            onInputFocus: onInputFocus,\n            onInputBlur: onInputBlur,\n            onChange: onInputChange,\n            hasError: fstate.error !== undefined\n          }) : jsxRuntime.jsx(Input, {\n            type: type,\n            name: field.id,\n            validated: fstate.validated === true,\n            placeholder: field.placeholder,\n            value: fstate.value,\n            autoComplete: field.autoComplete,\n            onInputFocus: onInputFocus,\n            onInputBlur: onInputBlur,\n            onChange: onInputChange,\n            autofocus: field.autofocus,\n            hasError: fstate.error !== undefined\n          }), fstate.error && jsxRuntime.jsx(InputError, {\n            error: fstate.error\n          })]\n        })\n      }), field.id);\n    }), jsxRuntime.jsx(FormRow, {\n      children: jsxRuntime.jsxs(React.Fragment, {\n        children: [jsxRuntime.jsx(button.Button, {\n          disabled: isLoading,\n          isLoading: isLoading,\n          type: \"submit\",\n          label: buttonLabel\n        }), footer]\n      })\n    }, \"form-button\")]\n  }));\n};\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n * defaultEmailValidator.\n */\n\n\nfunction defaultEmailValidator(value) {\n  return sessionAuth.__awaiter(this, void 0, void 0, function () {\n    var defaultEmailValidatorRegexp;\n    return sessionAuth.__generator(this, function (_a) {\n      if (typeof value !== \"string\") {\n        return [2\n        /*return*/\n        , \"ERROR_EMAIL_NON_STRING\"];\n      }\n\n      value = value.trim();\n      defaultEmailValidatorRegexp = // eslint-disable-next-line no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // We check if the email syntax is correct\n      // As per https://github.com/supertokens/supertokens-auth-react/issues/5#issuecomment-709512438\n      // Regex from https://stackoverflow.com/a/46181/3867175\n\n      if (value.match(defaultEmailValidatorRegexp) === null) {\n        return [2\n        /*return*/\n        , \"ERROR_EMAIL_INVALID\"];\n      }\n\n      return [2\n      /*return*/\n      , undefined];\n    });\n  });\n}\n/*\n * defaultPasswordValidator.\n * min 8 characters.\n * Contains lowercase, uppercase, and numbers.\n */\n\n\nfunction defaultPasswordValidator(value) {\n  return sessionAuth.__awaiter(this, void 0, void 0, function () {\n    return sessionAuth.__generator(this, function (_a) {\n      if (typeof value !== \"string\") {\n        return [2\n        /*return*/\n        , \"ERROR_PASSWORD_NON_STRING\"];\n      } // length >= 8 && < 100\n      // must have a number and a character\n      // as per https://github.com/supertokens/supertokens-auth-react/issues/5#issuecomment-709512438\n\n\n      if (value.length < 8) {\n        return [2\n        /*return*/\n        , \"ERROR_PASSWORD_TOO_SHORT\"];\n      }\n\n      if (value.length >= 100) {\n        return [2\n        /*return*/\n        , \"ERROR_PASSWORD_TOO_LONG\"];\n      }\n\n      if (value.match(/^.*[A-Za-z]+.*$/) === null) {\n        return [2\n        /*return*/\n        , \"ERROR_PASSWORD_NO_ALPHA\"];\n      }\n\n      if (value.match(/^.*[0-9]+.*$/) === null) {\n        return [2\n        /*return*/\n        , \"ERROR_PASSWORD_NO_NUM\"];\n      }\n\n      return [2\n      /*return*/\n      , undefined];\n    });\n  });\n}\n/*\n * defaultLoginPasswordValidator.\n * type string\n */\n\n\nfunction defaultLoginPasswordValidator(value) {\n  return sessionAuth.__awaiter(this, void 0, void 0, function () {\n    return sessionAuth.__generator(this, function (_a) {\n      if (typeof value !== \"string\") {\n        return [2\n        /*return*/\n        , \"ERROR_PASSWORD_NON_STRING\"];\n      }\n\n      return [2\n      /*return*/\n      , undefined];\n    });\n  });\n}\n/*\n * defaultValidate\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction defaultValidate(_) {\n  return sessionAuth.__awaiter(this, void 0, void 0, function () {\n    return sessionAuth.__generator(this, function (_a) {\n      return [2\n      /*return*/\n      , undefined];\n    });\n  });\n}\n\nexports.ArrowLeftIcon = ArrowLeftIcon;\nexports.DEFAULT_RESET_PASSWORD_PATH = DEFAULT_RESET_PASSWORD_PATH;\nexports.ErrorIcon = ErrorIcon;\nexports.FormBase = FormBase;\nexports.FormRow = FormRow;\nexports.Label = Label;\nexports.MANDATORY_FORM_FIELDS_ID_ARRAY = MANDATORY_FORM_FIELDS_ID_ARRAY;\nexports.defaultEmailValidator = defaultEmailValidator;\nexports.defaultLoginPasswordValidator = defaultLoginPasswordValidator;\nexports.defaultPasswordValidator = defaultPasswordValidator;\nexports.defaultValidate = defaultValidate;","map":{"version":3,"mappings":"","names":[],"sources":[],"sourcesContent":["\"use strict\";\n\nvar sessionAuth = require(\"./session-shared.js\");\nvar jsxRuntime = require(\"react/jsx-runtime\");\nvar React = require(\"react\");\nvar STGeneralError = require(\"supertokens-web-js/utils/error\");\nvar button = require(\"./emailpassword-shared.js\");\nrequire(\"./index.js\");\nvar translationContext = require(\"./translationContext.js\");\n\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : { default: e };\n}\n\nvar STGeneralError__default = /*#__PURE__*/ _interopDefault(STGeneralError);\n\n/*\n * Component.\n */\nfunction FormRow(_a) {\n    var children = _a.children,\n        hasError = _a.hasError;\n    return jsxRuntime.jsx(\n        \"div\",\n        sessionAuth.__assign(\n            { \"data-supertokens\": [\"formRow\", hasError ? \"hasError\" : \"\"].join(\" \") },\n            { children: children }\n        )\n    );\n}\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * Imports.\n */\n/*\n * Component.\n */\nfunction CheckedIcon() {\n    return jsxRuntime.jsx(\n        \"svg\",\n        sessionAuth.__assign(\n            {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"14.862\",\n                height: \"12.033\",\n                viewBox: \"0 0 14.862 12.033\",\n                \"data-supertokens\": \"checkedIcon\",\n            },\n            {\n                children: jsxRuntime.jsx(\"path\", {\n                    fill: \"rgb(var(--palette-primary))\",\n                    d: \"M12.629 49L5.06 56.572l-2.829-2.829L0 55.977l5.057 5.057.654-.651 9.152-9.152z\",\n                    transform: \"translate(0 -49)\",\n                }),\n            }\n        )\n    );\n}\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * Imports.\n */\n/*\n * Component.\n */\nfunction ErrorIcon() {\n    return jsxRuntime.jsx(\n        \"svg\",\n        sessionAuth.__assign(\n            {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"17\",\n                height: \"15\",\n                viewBox: \"0 0 17 15\",\n                \"data-supertokens\": \"errorIcon\",\n            },\n            {\n                children: jsxRuntime.jsxs(\"g\", {\n                    children: [\n                        jsxRuntime.jsx(\n                            \"g\",\n                            sessionAuth.__assign(\n                                { className: \"Asdf\", fill: \"rgb(var(--palette-error))\" },\n                                {\n                                    children: jsxRuntime.jsx(\"path\", {\n                                        d: \"M13.568 14.75H3.432c-.63 0-1.195-.325-1.512-.869-.317-.544-.32-1.196-.01-1.744l5.067-8.943c.315-.556.884-.887 1.523-.887.639 0 1.208.331 1.523.887l5.067 8.943c.31.548.307 1.2-.01 1.744s-.882.869-1.512.869z\",\n                                        transform: \"translate(-824.894 -352.829) translate(824.894 352.829)\",\n                                    }),\n                                }\n                            )\n                        ),\n                        jsxRuntime.jsx(\n                            \"text\",\n                            sessionAuth.__assign(\n                                {\n                                    fill: \"#fff\",\n                                    fontSize: \"10px\",\n                                    fontWeight: \"700\",\n                                    transform: \"translate(-824.894 -352.829) translate(832.014 365.198)\",\n                                },\n                                {\n                                    children: jsxRuntime.jsx(\n                                        \"tspan\",\n                                        sessionAuth.__assign({ x: \"0\", y: \"0\" }, { children: \"!\" })\n                                    ),\n                                }\n                            )\n                        ),\n                    ],\n                }),\n            }\n        )\n    );\n}\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * Imports.\n */\n/*\n * Component.\n */\nfunction ShowPasswordIcon(_a) {\n    var showPassword = _a.showPassword;\n    if (showPassword === true) {\n        return jsxRuntime.jsx(\"div\", {\n            children: jsxRuntime.jsx(\n                \"svg\",\n                sessionAuth.__assign(\n                    {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        width: \"18.391\",\n                        height: \"16.276\",\n                        viewBox: \"0 0 18.391 16.276\",\n                        \"data-supertokens\": \"showPasswordIcon show\",\n                    },\n                    {\n                        children: jsxRuntime.jsxs(\"g\", {\n                            children: [\n                                jsxRuntime.jsx(\"g\", {\n                                    children: jsxRuntime.jsx(\"g\", {\n                                        children: jsxRuntime.jsx(\"g\", {\n                                            children: jsxRuntime.jsx(\"path\", {\n                                                fill: \"rgb(var(--palette-textPrimary))\",\n                                                d: \"M29.289 100.33c-2.4-3.63-5.619-5.63-9.069-5.63s-6.67 2-9.069 5.63a.767.767 0 0 0 0 .845c2.4 3.63 5.619 5.63 9.069 5.63s6.67-2 9.069-5.63a.767.767 0 0 0 0-.845zm-9.069 4.944c-2.785 0-5.435-1.6-7.5-4.519 2.065-2.92 4.715-4.519 7.5-4.519s5.435 1.6 7.5 4.519c-2.064 2.92-4.711 4.519-7.5 4.519z\",\n                                                transform:\n                                                    \"translate(-822 -420.048) translate(822 422.035) translate(-11.025 -94.7)\",\n                                            }),\n                                        }),\n                                    }),\n                                }),\n                                jsxRuntime.jsxs(\n                                    \"g\",\n                                    sessionAuth.__assign(\n                                        {\n                                            fill: \"rgb(var(--palette-textPrimary))\",\n                                            stroke: \"rgb(var(--palette-inputBackground))\",\n                                            transform: \"translate(-822 -420.048) translate(827.164 424.055)\",\n                                        },\n                                        {\n                                            children: [\n                                                jsxRuntime.jsx(\"circle\", {\n                                                    cx: \"4.036\",\n                                                    cy: \"4.036\",\n                                                    r: \"4.036\",\n                                                    stroke: \"none\",\n                                                }),\n                                                jsxRuntime.jsx(\"circle\", {\n                                                    cx: \"4.036\",\n                                                    cy: \"4.036\",\n                                                    r: \"3.536\",\n                                                    fill: \"none\",\n                                                }),\n                                            ],\n                                        }\n                                    )\n                                ),\n                                jsxRuntime.jsx(\"path\", {\n                                    fill: \"none\",\n                                    stroke: \"#707070\",\n                                    strokeLinecap: \"round\",\n                                    strokeWidth: \"2.25px\",\n                                    d: \"M11.981 0L0 11.981\",\n                                    transform: \"translate(-822 -420.048) translate(825.084 421.639)\",\n                                }),\n                                jsxRuntime.jsx(\"path\", {\n                                    fill: \"none\",\n                                    stroke: \"rgb(var(--palette-inputBackground))\",\n                                    strokeLinecap: \"round\",\n                                    d: \"M13.978 0L0 13.978\",\n                                    transform: \"translate(-822 -420.048) translate(825.084 421.639)\",\n                                }),\n                            ],\n                        }),\n                    }\n                )\n            ),\n        });\n    }\n    return jsxRuntime.jsx(\"div\", {\n        children: jsxRuntime.jsx(\n            \"svg\",\n            sessionAuth.__assign(\n                {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"18.281\",\n                    height: \"12.033\",\n                    viewBox: \"0 0 18.281 12.033\",\n                    \"data-supertokens\": \"showPasswordIcon hide\",\n                },\n                {\n                    children: jsxRuntime.jsxs(\"g\", {\n                        children: [\n                            jsxRuntime.jsx(\"g\", {\n                                children: jsxRuntime.jsx(\"g\", {\n                                    children: jsxRuntime.jsx(\"g\", {\n                                        children: jsxRuntime.jsx(\"path\", {\n                                            fill: \"rgb(var(--palette-textPrimary))\",\n                                            d: \"M29.18 100.3c-2.384-3.608-5.586-5.6-9.015-5.6s-6.63 1.989-9.015 5.6a.763.763 0 0 0 0 .84c2.384 3.608 5.586 5.6 9.015 5.6s6.63-1.989 9.015-5.6a.763.763 0 0 0 0-.84zm-9.015 4.914c-2.769 0-5.4-1.589-7.459-4.492 2.052-2.9 4.686-4.492 7.459-4.492s5.4 1.589 7.459 4.492c-2.056 2.899-4.686 4.489-7.458 4.489z\",\n                                            transform:\n                                                \"translate(-822 -422.088) translate(822 422.088) translate(-11.025 -94.7)\",\n                                        }),\n                                    }),\n                                }),\n                            }),\n                            jsxRuntime.jsxs(\n                                \"g\",\n                                sessionAuth.__assign(\n                                    {\n                                        fill: \"rgb(var(--palette-textPrimary))\",\n                                        stroke: \"rgb(var(--palette-inputBackground))\",\n                                        transform: \"translate(-822 -422.088) translate(827.133 424.096)\",\n                                    },\n                                    {\n                                        children: [\n                                            jsxRuntime.jsx(\"circle\", {\n                                                cx: \"4.012\",\n                                                cy: \"4.012\",\n                                                r: \"4.012\",\n                                                stroke: \"none\",\n                                            }),\n                                            jsxRuntime.jsx(\"circle\", {\n                                                cx: \"4.012\",\n                                                cy: \"4.012\",\n                                                r: \"3.512\",\n                                                fill: \"none\",\n                                            }),\n                                        ],\n                                    }\n                                )\n                            ),\n                        ],\n                    }),\n                }\n            )\n        ),\n    });\n}\n\nvar Input = function (_a) {\n    var type = _a.type,\n        name = _a.name,\n        hasError = _a.hasError,\n        autoComplete = _a.autoComplete,\n        onInputFocus = _a.onInputFocus,\n        onInputBlur = _a.onInputBlur,\n        onChange = _a.onChange,\n        value = _a.value,\n        placeholder = _a.placeholder,\n        validated = _a.validated,\n        autofocus = _a.autofocus;\n    var t = translationContext.useTranslation();\n    var _b = React.useState(false),\n        showPassword = _b[0],\n        setShowPassword = _b[1];\n    /*\n     * Method.\n     */\n    function handleFocus() {\n        if (onInputFocus !== undefined) {\n            onInputFocus({\n                id: name,\n                value: value,\n            });\n        }\n    }\n    function handleBlur() {\n        if (onInputBlur !== undefined) {\n            onInputBlur({\n                id: name,\n                value: value,\n            });\n        }\n    }\n    function handleChange(event) {\n        if (onChange) {\n            onChange({\n                id: name,\n                value: event.target.value,\n            });\n        }\n    }\n    if (autoComplete === undefined) {\n        autoComplete = \"off\";\n    }\n    var inputType = type;\n    if (type === \"password\" && showPassword === true) {\n        inputType = \"text\";\n    }\n    return jsxRuntime.jsx(\n        \"div\",\n        sessionAuth.__assign(\n            { \"data-supertokens\": \"inputContainer\" },\n            {\n                children: jsxRuntime.jsxs(\n                    \"div\",\n                    sessionAuth.__assign(\n                        { \"data-supertokens\": [\"inputWrapper\", hasError ? \"inputError\" : \"\"].join(\" \") },\n                        {\n                            children: [\n                                jsxRuntime.jsx(\"input\", {\n                                    autoFocus: autofocus,\n                                    autoComplete: autoComplete,\n                                    \"data-supertokens\": \"input\",\n                                    className: \"supertokens-input\",\n                                    onFocus: handleFocus,\n                                    onBlur: handleBlur,\n                                    type: inputType,\n                                    name: name,\n                                    placeholder: t(placeholder),\n                                    onChange: handleChange,\n                                    value: value,\n                                }),\n                                hasError === true &&\n                                    jsxRuntime.jsx(\n                                        \"div\",\n                                        sessionAuth.__assign(\n                                            { \"data-supertokens\": \"inputAdornment inputAdornmentError\" },\n                                            { children: jsxRuntime.jsx(ErrorIcon, {}) }\n                                        )\n                                    ),\n                                validated === true &&\n                                    hasError === false &&\n                                    jsxRuntime.jsx(\n                                        \"div\",\n                                        sessionAuth.__assign(\n                                            { \"data-supertokens\": \"inputAdornment inputAdornmentSuccess\" },\n                                            { children: jsxRuntime.jsx(CheckedIcon, {}) }\n                                        )\n                                    ),\n                                type === \"password\" &&\n                                    value.length > 0 &&\n                                    jsxRuntime.jsx(\n                                        \"div\",\n                                        sessionAuth.__assign(\n                                            {\n                                                onClick: function () {\n                                                    return setShowPassword(showPassword === false);\n                                                },\n                                                \"data-supertokens\": \"inputAdornment showPassword\",\n                                            },\n                                            {\n                                                children: jsxRuntime.jsx(ShowPasswordIcon, {\n                                                    showPassword: showPassword,\n                                                }),\n                                            }\n                                        )\n                                    ),\n                            ],\n                        }\n                    )\n                ),\n            }\n        )\n    );\n};\n\nfunction InputError(_a) {\n    var error = _a.error;\n    var t = translationContext.useTranslation();\n    return jsxRuntime.jsx(\n        \"div\",\n        sessionAuth.__assign({ \"data-supertokens\": \"inputErrorMessage\" }, { children: t(error) })\n    );\n}\n\nfunction Label(_a) {\n    var value = _a.value,\n        showIsRequired = _a.showIsRequired;\n    var t = translationContext.useTranslation();\n    return jsxRuntime.jsxs(\n        \"div\",\n        sessionAuth.__assign({ \"data-supertokens\": \"label\" }, { children: [t(value), showIsRequired && \" *\"] })\n    );\n}\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * Imports.\n */\n/*\n * Component.\n */\nfunction ArrowLeftIcon(_a) {\n    var color = _a.color;\n    return jsxRuntime.jsx(\n        \"svg\",\n        sessionAuth.__assign(\n            {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"11.272\",\n                height: \"9.49\",\n                viewBox: \"0 0 11.272 9.49\",\n                \"data-supertokens\": \"arrowLeftIcon\",\n            },\n            {\n                children: jsxRuntime.jsx(\"path\", {\n                    fill: color,\n                    stroke: \"#fff\",\n                    strokeWidth: \"0.75px\",\n                    d: \"M9.931 5.2h.016-7.041L5.12 7.41a.581.581 0 0 1 0 .817l-.344.345a.576.576 0 0 1-.813 0L.168 4.778a.58.58 0 0 1 0-.816L3.962.168a.577.577 0 0 1 .813 0l.345.344a.57.57 0 0 1 .168.407.553.553 0 0 1-.168.4l-2.239 2.23h7.058a.6.6 0 0 1 .584.59v.487a.585.585 0 0 1-.592.574z\",\n                    transform: \"translate(.375 .375)\",\n                }),\n            }\n        )\n    );\n}\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar MANDATORY_FORM_FIELDS_ID_ARRAY = [\"email\", \"password\"];\nvar DEFAULT_RESET_PASSWORD_PATH = \"/reset-password\";\n\nvar FormBase = function (props) {\n    var footer = props.footer,\n        buttonLabel = props.buttonLabel,\n        showLabels = props.showLabels,\n        validateOnBlur = props.validateOnBlur,\n        formFields = props.formFields;\n    var unmounting = React.useRef(new AbortController());\n    React.useEffect(\n        function () {\n            // We need this because in some cases this gets called multiple times\n            unmounting.current = new AbortController();\n            return function () {\n                unmounting.current.abort();\n            };\n        },\n        [unmounting]\n    );\n    var _a = React.useState(\n            props.formFields.map(function (f) {\n                return { id: f.id, value: \"\" };\n            })\n        ),\n        fieldStates = _a[0],\n        setFieldStates = _a[1];\n    var _b = React.useState(false),\n        isLoading = _b[0],\n        setIsLoading = _b[1];\n    var updateFieldState = React.useCallback(\n        function (id, update) {\n            setFieldStates(function (os) {\n                var field = os.find(function (f) {\n                    return f.id === id;\n                });\n                if (field === undefined) {\n                    return sessionAuth.__spreadArray(\n                        sessionAuth.__spreadArray([], os, true),\n                        [update({ id: id, value: \"\" })],\n                        false\n                    );\n                }\n                return os\n                    .filter(function (f) {\n                        return f !== field;\n                    })\n                    .concat(update(field));\n            });\n        },\n        [setFieldStates]\n    );\n    var onInputFocus = React.useCallback(\n        function (field) {\n            updateFieldState(field.id, function (os) {\n                return sessionAuth.__assign(sessionAuth.__assign({}, os), { validated: false });\n            });\n        },\n        [updateFieldState]\n    );\n    var onInputBlur = React.useCallback(\n        function (field) {\n            return sessionAuth.__awaiter(void 0, void 0, void 0, function () {\n                var fieldConfig, error, _a;\n                return sessionAuth.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            if (!validateOnBlur) {\n                                return [2 /*return*/];\n                            }\n                            fieldConfig = props.formFields.find(function (f) {\n                                return f.id === field.id;\n                            });\n                            if (!(fieldConfig && field.value !== \"\")) return [3 /*break*/, 2];\n                            return [4 /*yield*/, fieldConfig.validate(field.value)];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            _a = undefined;\n                            _b.label = 3;\n                        case 3:\n                            error = _a;\n                            updateFieldState(field.id, function (os) {\n                                return sessionAuth.__assign(sessionAuth.__assign({}, os), {\n                                    error: error,\n                                    validated: error === undefined && field.value.length !== 0,\n                                });\n                            });\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        },\n        [validateOnBlur, updateFieldState, props.formFields]\n    );\n    var onInputChange = React.useCallback(\n        function (field) {\n            updateFieldState(field.id, function (os) {\n                return sessionAuth.__assign(sessionAuth.__assign({}, os), { value: field.value, error: undefined });\n            });\n            props.clearError();\n        },\n        [updateFieldState]\n    );\n    var onFormSubmit = React.useCallback(\n        function (e) {\n            return sessionAuth.__awaiter(void 0, void 0, void 0, function () {\n                var apiFields, fieldUpdates, result, generalError, e_1, _loop_1, _i, formFields_1, field, errorFields_1;\n                return sessionAuth.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            // Prevent default event propagation.\n                            e.preventDefault();\n                            // Set loading state.\n                            setIsLoading(true);\n                            setFieldStates(function (os) {\n                                return os.map(function (fs) {\n                                    return sessionAuth.__assign(sessionAuth.__assign({}, fs), { error: undefined });\n                                });\n                            });\n                            apiFields = formFields.map(function (field) {\n                                var fieldState = fieldStates.find(function (fs) {\n                                    return fs.id === field.id;\n                                });\n                                return {\n                                    id: field.id,\n                                    value: fieldState === undefined ? \"\" : fieldState.value,\n                                };\n                            });\n                            fieldUpdates = [];\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 6, 7, 8]);\n                            result = void 0;\n                            generalError = void 0;\n                            _a.label = 2;\n                        case 2:\n                            _a.trys.push([2, 4, , 5]);\n                            return [\n                                4 /*yield*/,\n                                props.callAPI(apiFields, function (id, value) {\n                                    return fieldUpdates.push({ id: id, value: value });\n                                }),\n                            ];\n                        case 3:\n                            result = _a.sent();\n                            return [3 /*break*/, 5];\n                        case 4:\n                            e_1 = _a.sent();\n                            if (STGeneralError__default.default.isThisError(e_1)) {\n                                generalError = e_1;\n                            } else {\n                                throw e_1;\n                            }\n                            return [3 /*break*/, 5];\n                        case 5:\n                            if (unmounting.current.signal.aborted) {\n                                return [2 /*return*/];\n                            }\n                            _loop_1 = function (field) {\n                                var update = fieldUpdates.find(function (f) {\n                                    return f.id === field.id;\n                                });\n                                if (update || field.clearOnSubmit === true) {\n                                    // We can do these one by one, it's almost never more than one field\n                                    updateFieldState(field.id, function (os) {\n                                        return sessionAuth.__assign(sessionAuth.__assign({}, os), {\n                                            value: update ? update.value : \"\",\n                                        });\n                                    });\n                                }\n                            };\n                            for (_i = 0, formFields_1 = formFields; _i < formFields_1.length; _i++) {\n                                field = formFields_1[_i];\n                                _loop_1(field);\n                            }\n                            if (generalError !== undefined) {\n                                props.onError(generalError.message);\n                            } else {\n                                // If successful\n                                if (result.status === \"OK\") {\n                                    setIsLoading(false);\n                                    props.clearError();\n                                    if (props.onSuccess !== undefined) {\n                                        props.onSuccess(result);\n                                    }\n                                }\n                                if (unmounting.current.signal.aborted) {\n                                    return [2 /*return*/];\n                                }\n                                // If field error.\n                                if (result.status === \"FIELD_ERROR\") {\n                                    errorFields_1 = result.formFields;\n                                    setFieldStates(function (os) {\n                                        return os.map(function (fs) {\n                                            var _a;\n                                            return sessionAuth.__assign(sessionAuth.__assign({}, fs), {\n                                                error:\n                                                    (_a = errorFields_1.find(function (ef) {\n                                                        return ef.id === fs.id;\n                                                    })) === null || _a === void 0\n                                                        ? void 0\n                                                        : _a.error,\n                                            });\n                                        });\n                                    });\n                                }\n                            }\n                            return [3 /*break*/, 8];\n                        case 6:\n                            _a.sent();\n                            props.onError(\"SOMETHING_WENT_WRONG_ERROR\");\n                            return [3 /*break*/, 8];\n                        case 7:\n                            setIsLoading(false);\n                            return [7 /*endfinally*/];\n                        case 8:\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        },\n        [setIsLoading, setFieldStates, props, formFields, fieldStates]\n    );\n    return jsxRuntime.jsxs(\n        \"form\",\n        sessionAuth.__assign(\n            { autoComplete: \"on\", noValidate: true, onSubmit: onFormSubmit },\n            {\n                children: [\n                    formFields.map(function (field) {\n                        var type = \"text\";\n                        // If email or password, replace field type.\n                        if (MANDATORY_FORM_FIELDS_ID_ARRAY.includes(field.id)) {\n                            type = field.id;\n                        }\n                        if (field.id === \"confirm-password\") {\n                            type = \"password\";\n                        }\n                        var fstate = fieldStates.find(function (s) {\n                            return s.id === field.id;\n                        }) || {\n                            id: field.id,\n                            validated: false,\n                            error: undefined,\n                            value: \"\",\n                        };\n                        return jsxRuntime.jsx(\n                            FormRow,\n                            sessionAuth.__assign(\n                                { hasError: fstate.error !== undefined },\n                                {\n                                    children: jsxRuntime.jsxs(React.Fragment, {\n                                        children: [\n                                            showLabels &&\n                                                (field.labelComponent !== undefined\n                                                    ? field.labelComponent\n                                                    : jsxRuntime.jsx(Label, {\n                                                          value: field.label,\n                                                          showIsRequired: field.showIsRequired,\n                                                      })),\n                                            field.inputComponent !== undefined\n                                                ? jsxRuntime.jsx(field.inputComponent, {\n                                                      type: type,\n                                                      name: field.id,\n                                                      validated: fstate.validated === true,\n                                                      placeholder: field.placeholder,\n                                                      value: fstate.value,\n                                                      autoComplete: field.autoComplete,\n                                                      autofocus: field.autofocus,\n                                                      onInputFocus: onInputFocus,\n                                                      onInputBlur: onInputBlur,\n                                                      onChange: onInputChange,\n                                                      hasError: fstate.error !== undefined,\n                                                  })\n                                                : jsxRuntime.jsx(Input, {\n                                                      type: type,\n                                                      name: field.id,\n                                                      validated: fstate.validated === true,\n                                                      placeholder: field.placeholder,\n                                                      value: fstate.value,\n                                                      autoComplete: field.autoComplete,\n                                                      onInputFocus: onInputFocus,\n                                                      onInputBlur: onInputBlur,\n                                                      onChange: onInputChange,\n                                                      autofocus: field.autofocus,\n                                                      hasError: fstate.error !== undefined,\n                                                  }),\n                                            fstate.error && jsxRuntime.jsx(InputError, { error: fstate.error }),\n                                        ],\n                                    }),\n                                }\n                            ),\n                            field.id\n                        );\n                    }),\n                    jsxRuntime.jsx(\n                        FormRow,\n                        {\n                            children: jsxRuntime.jsxs(React.Fragment, {\n                                children: [\n                                    jsxRuntime.jsx(button.Button, {\n                                        disabled: isLoading,\n                                        isLoading: isLoading,\n                                        type: \"submit\",\n                                        label: buttonLabel,\n                                    }),\n                                    footer,\n                                ],\n                            }),\n                        },\n                        \"form-button\"\n                    ),\n                ],\n            }\n        )\n    );\n};\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * defaultEmailValidator.\n */\nfunction defaultEmailValidator(value) {\n    return sessionAuth.__awaiter(this, void 0, void 0, function () {\n        var defaultEmailValidatorRegexp;\n        return sessionAuth.__generator(this, function (_a) {\n            if (typeof value !== \"string\") {\n                return [2 /*return*/, \"ERROR_EMAIL_NON_STRING\"];\n            }\n            value = value.trim();\n            defaultEmailValidatorRegexp =\n                // eslint-disable-next-line no-useless-escape\n                /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            // We check if the email syntax is correct\n            // As per https://github.com/supertokens/supertokens-auth-react/issues/5#issuecomment-709512438\n            // Regex from https://stackoverflow.com/a/46181/3867175\n            if (value.match(defaultEmailValidatorRegexp) === null) {\n                return [2 /*return*/, \"ERROR_EMAIL_INVALID\"];\n            }\n            return [2 /*return*/, undefined];\n        });\n    });\n}\n/*\n * defaultPasswordValidator.\n * min 8 characters.\n * Contains lowercase, uppercase, and numbers.\n */\nfunction defaultPasswordValidator(value) {\n    return sessionAuth.__awaiter(this, void 0, void 0, function () {\n        return sessionAuth.__generator(this, function (_a) {\n            if (typeof value !== \"string\") {\n                return [2 /*return*/, \"ERROR_PASSWORD_NON_STRING\"];\n            }\n            // length >= 8 && < 100\n            // must have a number and a character\n            // as per https://github.com/supertokens/supertokens-auth-react/issues/5#issuecomment-709512438\n            if (value.length < 8) {\n                return [2 /*return*/, \"ERROR_PASSWORD_TOO_SHORT\"];\n            }\n            if (value.length >= 100) {\n                return [2 /*return*/, \"ERROR_PASSWORD_TOO_LONG\"];\n            }\n            if (value.match(/^.*[A-Za-z]+.*$/) === null) {\n                return [2 /*return*/, \"ERROR_PASSWORD_NO_ALPHA\"];\n            }\n            if (value.match(/^.*[0-9]+.*$/) === null) {\n                return [2 /*return*/, \"ERROR_PASSWORD_NO_NUM\"];\n            }\n            return [2 /*return*/, undefined];\n        });\n    });\n}\n/*\n * defaultLoginPasswordValidator.\n * type string\n */\nfunction defaultLoginPasswordValidator(value) {\n    return sessionAuth.__awaiter(this, void 0, void 0, function () {\n        return sessionAuth.__generator(this, function (_a) {\n            if (typeof value !== \"string\") {\n                return [2 /*return*/, \"ERROR_PASSWORD_NON_STRING\"];\n            }\n            return [2 /*return*/, undefined];\n        });\n    });\n}\n/*\n * defaultValidate\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction defaultValidate(_) {\n    return sessionAuth.__awaiter(this, void 0, void 0, function () {\n        return sessionAuth.__generator(this, function (_a) {\n            return [2 /*return*/, undefined];\n        });\n    });\n}\n\nexports.ArrowLeftIcon = ArrowLeftIcon;\nexports.DEFAULT_RESET_PASSWORD_PATH = DEFAULT_RESET_PASSWORD_PATH;\nexports.ErrorIcon = ErrorIcon;\nexports.FormBase = FormBase;\nexports.FormRow = FormRow;\nexports.Label = Label;\nexports.MANDATORY_FORM_FIELDS_ID_ARRAY = MANDATORY_FORM_FIELDS_ID_ARRAY;\nexports.defaultEmailValidator = defaultEmailValidator;\nexports.defaultLoginPasswordValidator = defaultLoginPasswordValidator;\nexports.defaultPasswordValidator = defaultPasswordValidator;\nexports.defaultValidate = defaultValidate;\n"]},"metadata":{},"sourceType":"script"}