{"ast":null,"code":"\"use strict\";\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NormalisedURLPath =\n/** @class */\nfunction () {\n  function NormalisedURLPath(url) {\n    var _this = this;\n\n    this.startsWith = function (other) {\n      return _this.value.startsWith(other.value);\n    };\n\n    this.appendPath = function (other) {\n      return new NormalisedURLPath(_this.value + other.value);\n    };\n\n    this.getAsStringDangerous = function () {\n      // Otherwise, return value.\n      return _this.value;\n    };\n\n    this.value = normaliseURLPathOrThrowError(url);\n  }\n\n  return NormalisedURLPath;\n}();\n\nexports.default = NormalisedURLPath;\n\nfunction normaliseURLPathOrThrowError(input) {\n  input = input.trim();\n\n  try {\n    if (!input.startsWith(\"http://\") && !input.startsWith(\"https://\")) {\n      throw new Error(\"Error converting to proper URL\");\n    }\n\n    var urlObj = new URL(input);\n    input = urlObj.pathname;\n\n    if (input.charAt(input.length - 1) === \"/\") {\n      return input.substr(0, input.length - 1);\n    }\n\n    return input; // eslint-disable-next-line no-empty\n  } catch (err) {} // not a valid URL\n  // If the input contains a . it means they have given a domain name.\n  // So we try assuming that they have given a domain name + path\n\n\n  if ((domainGiven(input) || input.startsWith(\"localhost\")) && !input.startsWith(\"http://\") && !input.startsWith(\"https://\")) {\n    input = \"http://\" + input;\n    return normaliseURLPathOrThrowError(input);\n  }\n\n  if (input.charAt(0) !== \"/\") {\n    input = \"/\" + input;\n  } // at this point, we should be able to convert it into a fake URL and recursively call this function.\n\n\n  try {\n    // test that we can convert this to prevent an infinite loop\n    new URL(\"http://example.com\" + input);\n    return normaliseURLPathOrThrowError(\"http://example.com\" + input);\n  } catch (err) {\n    throw new Error(\"Please provide a valid URL path\");\n  }\n}\n\nfunction domainGiven(input) {\n  // If no dot, return false.\n  if (input.indexOf(\".\") === -1 || input.startsWith(\"/\")) {\n    return false;\n  }\n\n  try {\n    var url = new URL(input);\n    return url.hostname.indexOf(\".\") !== -1;\n  } catch (e) {}\n\n  try {\n    var url = new URL(\"http://\" + input);\n    return url.hostname.indexOf(\".\") !== -1;\n  } catch (e) {}\n\n  return false;\n}","map":{"version":3,"sources":["/home/dom/FlyM/node_modules/supertokens-web-js/lib/build/normalisedURLPath.js"],"names":["Object","defineProperty","exports","value","NormalisedURLPath","url","_this","startsWith","other","appendPath","getAsStringDangerous","normaliseURLPathOrThrowError","default","input","trim","Error","urlObj","URL","pathname","charAt","length","substr","err","domainGiven","indexOf","hostname","e"],"mappings":"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","sourcesContent":["\"use strict\";\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NormalisedURLPath = /** @class */ (function () {\n    function NormalisedURLPath(url) {\n        var _this = this;\n        this.startsWith = function (other) {\n            return _this.value.startsWith(other.value);\n        };\n        this.appendPath = function (other) {\n            return new NormalisedURLPath(_this.value + other.value);\n        };\n        this.getAsStringDangerous = function () {\n            // Otherwise, return value.\n            return _this.value;\n        };\n        this.value = normaliseURLPathOrThrowError(url);\n    }\n    return NormalisedURLPath;\n})();\nexports.default = NormalisedURLPath;\nfunction normaliseURLPathOrThrowError(input) {\n    input = input.trim();\n    try {\n        if (!input.startsWith(\"http://\") && !input.startsWith(\"https://\")) {\n            throw new Error(\"Error converting to proper URL\");\n        }\n        var urlObj = new URL(input);\n        input = urlObj.pathname;\n        if (input.charAt(input.length - 1) === \"/\") {\n            return input.substr(0, input.length - 1);\n        }\n        return input;\n        // eslint-disable-next-line no-empty\n    } catch (err) {}\n    // not a valid URL\n    // If the input contains a . it means they have given a domain name.\n    // So we try assuming that they have given a domain name + path\n    if (\n        (domainGiven(input) || input.startsWith(\"localhost\")) &&\n        !input.startsWith(\"http://\") &&\n        !input.startsWith(\"https://\")\n    ) {\n        input = \"http://\" + input;\n        return normaliseURLPathOrThrowError(input);\n    }\n    if (input.charAt(0) !== \"/\") {\n        input = \"/\" + input;\n    }\n    // at this point, we should be able to convert it into a fake URL and recursively call this function.\n    try {\n        // test that we can convert this to prevent an infinite loop\n        new URL(\"http://example.com\" + input);\n        return normaliseURLPathOrThrowError(\"http://example.com\" + input);\n    } catch (err) {\n        throw new Error(\"Please provide a valid URL path\");\n    }\n}\nfunction domainGiven(input) {\n    // If no dot, return false.\n    if (input.indexOf(\".\") === -1 || input.startsWith(\"/\")) {\n        return false;\n    }\n    try {\n        var url = new URL(input);\n        return url.hostname.indexOf(\".\") !== -1;\n    } catch (e) {}\n    try {\n        var url = new URL(\"http://\" + input);\n        return url.hostname.indexOf(\".\") !== -1;\n    } catch (e) {}\n    return false;\n}\n"]},"metadata":{},"sourceType":"script"}